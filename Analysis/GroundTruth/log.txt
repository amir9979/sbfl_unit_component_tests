[INFO][START]
[INFO][Chart][1][MAP][START]
[INFO][Chart][1][MAPPED][public org.jfree.chart.LegendItemCollection org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems()]
[INFO][Chart][1][MAP][END]
[INFO][Chart][1][#FAIL-TESTS][1]
[INFO][Chart][2][MAP][START]
[INFO][Chart][2][MAPPED][public static org.jfree.data.Range org.jfree.data.general.DatasetUtilities.iterateDomainBounds(org.jfree.data.xy.XYDataset;boolean)]
[INFO][Chart][2][MAPPED][public static org.jfree.data.Range org.jfree.data.general.DatasetUtilities.iterateRangeBounds(org.jfree.data.xy.XYDataset;boolean)]
[INFO][Chart][2][MAP][END]
[INFO][Chart][2][#FAIL-TESTS][2]
[INFO][Chart][3][MAP][START]
[INFO][Chart][3][MAPPED][public org.jfree.data.time.TimeSeries org.jfree.data.time.TimeSeries.createCopy(int;int) throws java.lang.CloneNotSupportedException]
[INFO][Chart][3][MAP][END]
[INFO][Chart][3][#FAIL-TESTS][1]
[INFO][Chart][4][MAP][START]
[INFO][Chart][4][MAPPED][public org.jfree.data.Range org.jfree.chart.plot.XYPlot.getDataRange(org.jfree.chart.axis.ValueAxis)]
[INFO][Chart][4][MAP][END]
[INFO][Chart][4][#FAIL-TESTS][22]
[INFO][Chart][5][MAP][START]
[INFO][Chart][5][MAPPED][public org.jfree.data.xy.XYDataItem org.jfree.data.xy.XYSeries.addOrUpdate(java.lang.Number;java.lang.Number)]
[INFO][Chart][5][MAP][END]
[INFO][Chart][5][#FAIL-TESTS][1]
[INFO][Chart][6][MAP][START]
[INFO][Chart][6][MAPPED][public boolean org.jfree.chart.util.ShapeList.equals(java.lang.Object)]
[INFO][Chart][6][MAP][END]
[INFO][Chart][6][#FAIL-TESTS][2]
[INFO][Chart][7][MAP][START]
[INFO][Chart][7][MAPPED][private void org.jfree.data.time.TimePeriodValues.updateBounds(org.jfree.data.time.TimePeriod;int)]
[INFO][Chart][7][MAP][END]
[INFO][Chart][7][#FAIL-TESTS][1]
[INFO][Chart][8][MAP][START]
[INFO][Chart][8][MAPPED][public org.jfree.data.time.Week(java.util.Date;java.util.TimeZone)]
[INFO][Chart][8][MAP][END]
[INFO][Chart][8][#FAIL-TESTS][1]
[INFO][Chart][9][MAP][START]
[INFO][Chart][9][MAPPED][public org.jfree.data.time.TimeSeries org.jfree.data.time.TimeSeries.createCopy(org.jfree.data.time.RegularTimePeriod;org.jfree.data.time.RegularTimePeriod) throws java.lang.CloneNotSupportedException]
[INFO][Chart][9][MAP][END]
[INFO][Chart][9][#FAIL-TESTS][1]
[INFO][Chart][10][MAP][START]
[INFO][Chart][10][MAPPED][public java.lang.String org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator.generateToolTipFragment(java.lang.String)]
[INFO][Chart][10][MAP][END]
[INFO][Chart][10][#FAIL-TESTS][1]
[INFO][Chart][11][MAP][START]
[INFO][Chart][11][MAPPED][public static boolean org.jfree.chart.util.ShapeUtilities.equal(java.awt.geom.GeneralPath;java.awt.geom.GeneralPath)]
[INFO][Chart][11][MAP][END]
[INFO][Chart][11][#FAIL-TESTS][1]
[INFO][Chart][12][MAP][START]
[INFO][Chart][12][MAPPED][public org.jfree.chart.plot.MultiplePiePlot(org.jfree.data.category.CategoryDataset)]
[INFO][Chart][12][MAP][END]
[INFO][Chart][12][#FAIL-TESTS][1]
[INFO][Chart][13][MAP][START]
[INFO][Chart][13][MAPPED][protected org.jfree.chart.util.Size2D org.jfree.chart.block.BorderArrangement.arrangeFF(org.jfree.chart.block.BlockContainer;java.awt.Graphics2D;org.jfree.chart.block.RectangleConstraint)]
[INFO][Chart][13][MAP][END]
[INFO][Chart][13][#FAIL-TESTS][1]
[INFO][Chart][14][MAP][START]
[INFO][Chart][14][MAPPED][public boolean org.jfree.chart.plot.CategoryPlot.removeDomainMarker(int;org.jfree.chart.plot.Marker;org.jfree.chart.util.Layer;boolean)]
[INFO][Chart][14][MAPPED][public boolean org.jfree.chart.plot.CategoryPlot.removeRangeMarker(int;org.jfree.chart.plot.Marker;org.jfree.chart.util.Layer;boolean)]
[INFO][Chart][14][MAPPED][public boolean org.jfree.chart.plot.XYPlot.removeDomainMarker(int;org.jfree.chart.plot.Marker;org.jfree.chart.util.Layer;boolean)]
[INFO][Chart][14][MAPPED][public boolean org.jfree.chart.plot.XYPlot.removeRangeMarker(int;org.jfree.chart.plot.Marker;org.jfree.chart.util.Layer;boolean)]
[INFO][Chart][14][MAP][END]
[INFO][Chart][14][#FAIL-TESTS][4]
[INFO][Chart][15][MAP][START]
[INFO][Chart][15][MAPPED][FAIL][public double org.jfree.chart.plot.PiePlot.getMaximumExplodePercent()] Not found!
[INFO][Chart][15][MAPPED][public org.jfree.chart.plot.PiePlotState org.jfree.chart.plot.PiePlot.initialise(java.awt.Graphics2D;java.awt.geom.Rectangle2D;org.jfree.chart.plot.PiePlot;java.lang.Integer;org.jfree.chart.plot.PlotRenderingInfo)]
[INFO][Chart][15][MAP][END]
[INFO][Chart][15][#FAIL-TESTS][1]
[INFO][Chart][16][MAP][START]
[INFO][Chart][16][MAPPED][public org.jfree.data.category.DefaultIntervalCategoryDataset(java.lang.Comparable[];java.lang.Comparable[];java.lang.Number[][];java.lang.Number[][])]
[INFO][Chart][16][MAPPED][public void org.jfree.data.category.DefaultIntervalCategoryDataset.setCategoryKeys(java.lang.Comparable[])]
[INFO][Chart][16][MAP][END]
[INFO][Chart][16][#FAIL-TESTS][8]
[INFO][Chart][17][MAP][START]
[INFO][Chart][17][MAPPED][public java.lang.Object org.jfree.data.time.TimeSeries.clone() throws java.lang.CloneNotSupportedException]
[INFO][Chart][17][MAP][END]
[INFO][Chart][17][#FAIL-TESTS][1]
[INFO][Chart][18][MAP][START]
[INFO][Chart][18][MAPPED][public void org.jfree.data.DefaultKeyedValues.removeValue(int)]
[INFO][Chart][18][MAPPED][public void org.jfree.data.DefaultKeyedValues.removeValue(java.lang.Comparable)]
[INFO][Chart][18][MAPPED][public void org.jfree.data.DefaultKeyedValues2D.removeColumn(java.lang.Comparable)]
[INFO][Chart][18][MAP][END]
[INFO][Chart][18][#FAIL-TESTS][4]
[INFO][Chart][19][MAP][START]
[INFO][Chart][19][MAPPED][public int org.jfree.chart.plot.CategoryPlot.getDomainAxisIndex(org.jfree.chart.axis.CategoryAxis)]
[INFO][Chart][19][MAPPED][public int org.jfree.chart.plot.CategoryPlot.getRangeAxisIndex(org.jfree.chart.axis.ValueAxis)]
[INFO][Chart][19][MAP][END]
[INFO][Chart][19][#FAIL-TESTS][2]
[INFO][Chart][20][MAP][START]
[INFO][Chart][20][MAPPED][public org.jfree.chart.plot.ValueMarker(double;java.awt.Paint;java.awt.Stroke;java.awt.Paint;java.awt.Stroke;float)]
[INFO][Chart][20][MAP][END]
[INFO][Chart][20][#FAIL-TESTS][1]
[INFO][Chart][21][MAP][START]
[INFO][Chart][21][MAPPED][public void org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.add(org.jfree.data.statistics.BoxAndWhiskerItem;java.lang.Comparable;java.lang.Comparable)]
[INFO][Chart][21][MAPPED][private void org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.updateBounds()]
[INFO][Chart][21][MAP][END]
[INFO][Chart][21][#FAIL-TESTS][1]
[INFO][Chart][22][MAP][START]
[INFO][Chart][22][MAPPED][public java.lang.Object org.jfree.data.KeyedObjects2D.getObject(java.lang.Comparable;java.lang.Comparable)]
[INFO][Chart][22][MAPPED][public void org.jfree.data.KeyedObjects2D.removeObject(java.lang.Comparable;java.lang.Comparable)]
[INFO][Chart][22][MAPPED][public void org.jfree.data.KeyedObjects2D.removeRow(java.lang.Comparable)]
[INFO][Chart][22][MAPPED][public void org.jfree.data.KeyedObjects2D.removeColumn(java.lang.Comparable)]
[INFO][Chart][22][MAP][END]
[INFO][Chart][22][#FAIL-TESTS][6]
[INFO][Chart][23][MAP][START]
[INFO][Chart][23][MAPPED][FAIL] Empty file!
[INFO][Chart][23][MAP][END]
[INFO][Chart][24][MAP][START]
[INFO][Chart][24][MAPPED][public java.awt.Paint org.jfree.chart.renderer.GrayPaintScale.getPaint(double)]
[INFO][Chart][24][MAP][END]
[INFO][Chart][24][#FAIL-TESTS][1]
[INFO][Chart][25][MAP][START]
[INFO][Chart][25][MAPPED][protected void org.jfree.chart.renderer.category.StatisticalBarRenderer.drawHorizontalItem(java.awt.Graphics2D;org.jfree.chart.renderer.category.CategoryItemRendererState;java.awt.geom.Rectangle2D;org.jfree.chart.plot.CategoryPlot;org.jfree.chart.axis.CategoryAxis;org.jfree.chart.axis.ValueAxis;org.jfree.data.statistics.StatisticalCategoryDataset;int;int)]
[INFO][Chart][25][MAPPED][protected void org.jfree.chart.renderer.category.StatisticalBarRenderer.drawVerticalItem(java.awt.Graphics2D;org.jfree.chart.renderer.category.CategoryItemRendererState;java.awt.geom.Rectangle2D;org.jfree.chart.plot.CategoryPlot;org.jfree.chart.axis.CategoryAxis;org.jfree.chart.axis.ValueAxis;org.jfree.data.statistics.StatisticalCategoryDataset;int;int)]
[INFO][Chart][25][MAP][END]
[INFO][Chart][25][#FAIL-TESTS][4]
[INFO][Chart][26][MAP][START]
[INFO][Chart][26][MAPPED][protected org.jfree.chart.axis.AxisState org.jfree.chart.axis.Axis.drawLabel(java.lang.String;java.awt.Graphics2D;java.awt.geom.Rectangle2D;java.awt.geom.Rectangle2D;org.jfree.chart.util.RectangleEdge;org.jfree.chart.axis.AxisState;org.jfree.chart.plot.PlotRenderingInfo)]
[INFO][Chart][26][MAP][END]
[INFO][Chart][26][#FAIL-TESTS][22]
[INFO][Time][1][MAP][START]
[INFO][Time][1][MAPPED][public org.joda.time.Partial(org.joda.time.DateTimeFieldType[];int[];org.joda.time.Chronology)]
[INFO][Time][1][MAPPED][public int org.joda.time.field.UnsupportedDurationField.compareTo(org.joda.time.DurationField)]
[INFO][Time][1][MAP][END]
[INFO][Time][1][#FAIL-TESTS][1]
[INFO][Time][2][MAP][START]
[INFO][Time][2][MAPPED][public org.joda.time.Partial(org.joda.time.DateTimeFieldType[];int[];org.joda.time.Chronology)]
[INFO][Time][2][MAPPED][public org.joda.time.Partial org.joda.time.Partial.with(org.joda.time.DateTimeFieldType;int)]
[INFO][Time][2][MAPPED][public int org.joda.time.field.UnsupportedDurationField.compareTo(org.joda.time.DurationField)]
[INFO][Time][2][MAP][END]
[INFO][Time][2][#FAIL-TESTS][1]
[INFO][Time][3][MAP][START]
[INFO][Time][3][MAPPED][public void org.joda.time.MutableDateTime.add(org.joda.time.DurationFieldType;int)]
[INFO][Time][3][MAPPED][public void org.joda.time.MutableDateTime.addYears(int)]
[INFO][Time][3][MAPPED][public void org.joda.time.MutableDateTime.addWeekyears(int)]
[INFO][Time][3][MAPPED][public void org.joda.time.MutableDateTime.addMonths(int)]
[INFO][Time][3][MAPPED][public void org.joda.time.MutableDateTime.addWeeks(int)]
[INFO][Time][3][MAPPED][public void org.joda.time.MutableDateTime.addDays(int)]
[INFO][Time][3][MAPPED][public void org.joda.time.MutableDateTime.addHours(int)]
[INFO][Time][3][MAPPED][public void org.joda.time.MutableDateTime.addMinutes(int)]
[INFO][Time][3][MAPPED][public void org.joda.time.MutableDateTime.addSeconds(int)]
[INFO][Time][3][MAPPED][public void org.joda.time.MutableDateTime.addMillis(int)]
[INFO][Time][3][MAP][END]
[INFO][Time][3][#FAIL-TESTS][5]
[INFO][Time][4][MAP][START]
[INFO][Time][4][MAPPED][public org.joda.time.Partial org.joda.time.Partial.with(org.joda.time.DateTimeFieldType;int)]
[INFO][Time][4][MAP][END]
[INFO][Time][4][#FAIL-TESTS][1]
[INFO][Time][5][MAP][START]
[INFO][Time][5][MAPPED][public org.joda.time.Period org.joda.time.Period.normalizedStandard(org.joda.time.PeriodType)]
[INFO][Time][5][MAP][END]
[INFO][Time][5][#FAIL-TESTS][3]
[INFO][Time][6][MAP][START]
[INFO][Time][6][MAPPED][public static synchronized org.joda.time.chrono.GJChronology org.joda.time.chrono.GJChronology.getInstance(org.joda.time.DateTimeZone;org.joda.time.ReadableInstant;int)]
[INFO][Time][6][MAPPED][public long org.joda.time.chrono.GJChronology$ImpreciseCutoverField.add(long;int)]
[INFO][Time][6][MAPPED][FAIL][public long org.joda.time.chrono.GJChronology$ImpreciseCutoverField.add(long,long)] Not found!
[INFO][Time][6][MAP][END]
[INFO][Time][6][#FAIL-TESTS][5]
[INFO][Time][7][MAP][START]
[INFO][Time][7][MAPPED][public int org.joda.time.format.DateTimeFormatter.parseInto(org.joda.time.ReadWritableInstant;java.lang.String;int)]
[INFO][Time][7][MAP][END]
[INFO][Time][7][#FAIL-TESTS][2]
[INFO][Time][8][MAP][START]
[INFO][Time][8][MAPPED][public static org.joda.time.DateTimeZone org.joda.time.DateTimeZone.forOffsetHoursMinutes(int;int) throws java.lang.IllegalArgumentException]
[INFO][Time][8][MAP][END]
[INFO][Time][8][#FAIL-TESTS][1]
[INFO][Time][9][MAP][START]
[INFO][Time][9][MAPPED][public static org.joda.time.DateTimeZone org.joda.time.DateTimeZone.forOffsetHoursMinutes(int;int) throws java.lang.IllegalArgumentException]
[INFO][Time][9][MAPPED][public static org.joda.time.DateTimeZone org.joda.time.DateTimeZone.forOffsetMillis(int)]
[INFO][Time][9][MAP][END]
[INFO][Time][9][#FAIL-TESTS][1]
[INFO][Time][10][MAP][START]
[INFO][Time][10][MAPPED][protected static int org.joda.time.base.BaseSingleFieldPeriod.between(org.joda.time.ReadablePartial;org.joda.time.ReadablePartial;org.joda.time.ReadablePeriod)]
[INFO][Time][10][MAP][END]
[INFO][Time][10][#FAIL-TESTS][2]
[INFO][Time][11][MAP][START]
[INFO][Time][11][MAPPED][FAIL] Empty file!
[INFO][Time][11][MAP][END]
[INFO][Time][12][MAP][START]
[INFO][Time][12][MAPPED][public static org.joda.time.LocalDate org.joda.time.LocalDate.fromCalendarFields(java.util.Calendar)]
[INFO][Time][12][MAPPED][public static org.joda.time.LocalDate org.joda.time.LocalDate.fromDateFields(java.util.Date)]
[INFO][Time][12][MAPPED][public static org.joda.time.LocalDateTime org.joda.time.LocalDateTime.fromCalendarFields(java.util.Calendar)]
[INFO][Time][12][MAPPED][public static org.joda.time.LocalDateTime org.joda.time.LocalDateTime.fromDateFields(java.util.Date)]
[INFO][Time][12][MAP][END]
[INFO][Time][12][#FAIL-TESTS][8]
[INFO][Time][13][MAP][START]
[INFO][Time][13][MAPPED][public int org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.calculatePrintedLength(org.joda.time.ReadablePeriod;java.util.Locale)]
[INFO][Time][13][MAPPED][public void org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.printTo(java.lang.StringBuffer;org.joda.time.ReadablePeriod;java.util.Locale)]
[INFO][Time][13][MAP][END]
[INFO][Time][13][#FAIL-TESTS][1]
[INFO][Time][14][MAP][START]
[INFO][Time][14][MAPPED][public int[] org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(org.joda.time.ReadablePartial;int;int[];int)]
[INFO][Time][14][MAP][END]
[INFO][Time][14][#FAIL-TESTS][8]
[INFO][Time][15][MAP][START]
[INFO][Time][15][MAPPED][public static long org.joda.time.field.FieldUtils.safeMultiply(long;int)]
[INFO][Time][15][MAP][END]
[INFO][Time][15][#FAIL-TESTS][1]
[INFO][Time][16][MAP][START]
[INFO][Time][16][MAPPED][public int org.joda.time.format.DateTimeFormatter.parseInto(org.joda.time.ReadWritableInstant;java.lang.String;int)]
[INFO][Time][16][MAP][END]
[INFO][Time][16][#FAIL-TESTS][7]
[INFO][Time][17][MAP][START]
[INFO][Time][17][MAPPED][public long org.joda.time.DateTimeZone.adjustOffset(long;boolean)]
[INFO][Time][17][MAP][END]
[INFO][Time][17][#FAIL-TESTS][1]
[INFO][Time][18][MAP][START]
[INFO][Time][18][MAPPED][public long org.joda.time.chrono.GJChronology.getDateTimeMillis(int;int;int;int;int;int;int) throws java.lang.IllegalArgumentException]
[INFO][Time][18][MAP][END]
[INFO][Time][18][#FAIL-TESTS][1]
[INFO][Time][19][MAP][START]
[INFO][Time][19][MAPPED][public int org.joda.time.DateTimeZone.getOffsetFromLocal(long)]
[INFO][Time][19][MAP][END]
[INFO][Time][19][#FAIL-TESTS][1]
[INFO][Time][20][MAP][START]
[INFO][Time][20][MAPPED][public int org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId.parseInto(org.joda.time.format.DateTimeParserBucket;java.lang.String;int)]
[INFO][Time][20][MAP][END]
[INFO][Time][20][#FAIL-TESTS][1]
[INFO][Time][21][MAP][START]
[INFO][Time][21][MAPPED][private synchronized java.lang.String[] org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale;java.lang.String;java.lang.String)]
[INFO][Time][21][MAP][END]
[INFO][Time][21][#FAIL-TESTS][2]
[INFO][Time][22][MAP][START]
[INFO][Time][22][MAPPED][protected org.joda.time.base.BasePeriod(long)]
[INFO][Time][22][MAP][END]
[INFO][Time][22][#FAIL-TESTS][2]
[INFO][Time][23][MAP][START]
[INFO][Time][23][MAPPED][private static synchronized java.lang.String org.joda.time.DateTimeZone.getConvertedId(java.lang.String)]
[INFO][Time][23][MAP][END]
[INFO][Time][23][#FAIL-TESTS][1]
[INFO][Time][24][MAP][START]
[INFO][Time][24][MAPPED][public long org.joda.time.format.DateTimeParserBucket.computeMillis(boolean;java.lang.String)]
[INFO][Time][24][MAP][END]
[INFO][Time][24][#FAIL-TESTS][7]
[INFO][Time][25][MAP][START]
[INFO][Time][25][MAPPED][public int org.joda.time.DateTimeZone.getOffsetFromLocal(long)]
[INFO][Time][25][MAP][END]
[INFO][Time][25][#FAIL-TESTS][3]
[INFO][Time][26][MAP][START]
[INFO][Time][26][MAPPED][FAIL][public long org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.add(long,int)] Not found!
[INFO][Time][26][MAPPED][FAIL][public long org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.add(long,long)] Not found!
[INFO][Time][26][MAPPED][public long org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.addWrapField(long;int)]
[INFO][Time][26][MAPPED][public long org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.set(long;int)]
[INFO][Time][26][MAPPED][FAIL][public long org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.set(long,java.lang.String,java.util.Locale)] Not found!
[INFO][Time][26][MAPPED][public long org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.roundFloor(long)]
[INFO][Time][26][MAPPED][public long org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.roundCeiling(long)]
[INFO][Time][26][MAP][END]
[INFO][Time][26][#FAIL-TESTS][8]
[INFO][Time][27][MAP][START]
[INFO][Time][27][MAPPED][private static org.joda.time.format.PeriodFormatter org.joda.time.format.PeriodFormatterBuilder.toFormatter(java.util.List;boolean;boolean)]
[INFO][Time][27][MAP][END]
[INFO][Time][27][#FAIL-TESTS][1]
[INFO][Lang][1][MAP][START]
[INFO][Lang][1][MAPPED][public static java.lang.Number org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String) throws java.lang.NumberFormatException]
[INFO][Lang][1][MAP][END]
[INFO][Lang][1][#FAIL-TESTS][1]
[INFO][Lang][2][MAP][START]
[INFO][Lang][2][MAPPED][public static java.util.Locale org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)]
[INFO][Lang][2][MAP][END]
[INFO][Lang][2][#FAIL-TESTS][1]
[INFO][Lang][3][MAP][START]
[INFO][Lang][3][MAPPED][public static java.lang.Number org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String) throws java.lang.NumberFormatException]
[INFO][Lang][3][MAP][END]
[INFO][Lang][3][#FAIL-TESTS][1]
[INFO][Lang][4][MAP][START]
[INFO][Lang][4][MAPPED][public org.apache.commons.lang3.text.translate.LookupTranslator(java.lang.CharSequence[][])]
[INFO][Lang][4][MAPPED][public int org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence;int;java.io.Writer) throws java.io.IOException]
[INFO][Lang][4][MAP][END]
[INFO][Lang][4][#FAIL-TESTS][1]
[INFO][Lang][5][MAP][START]
[INFO][Lang][5][MAPPED][public static java.util.Locale org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)]
[INFO][Lang][5][MAP][END]
[INFO][Lang][5][#FAIL-TESTS][1]
[INFO][Lang][6][MAP][START]
[INFO][Lang][6][MAPPED][public final void org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence;java.io.Writer) throws java.io.IOException]
[INFO][Lang][6][MAP][END]
[INFO][Lang][6][#FAIL-TESTS][1]
[INFO][Lang][7][MAP][START]
[INFO][Lang][7][MAPPED][public static java.lang.Number org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String) throws java.lang.NumberFormatException]
[INFO][Lang][7][MAPPED][public static java.math.BigDecimal org.apache.commons.lang3.math.NumberUtils.createBigDecimal(java.lang.String)]
[INFO][Lang][7][MAP][END]
[INFO][Lang][7][#FAIL-TESTS][1]
[INFO][Lang][8][MAP][START]
[INFO][Lang][8][MAPPED][org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule(java.util.TimeZone;java.util.Locale;int)]
[INFO][Lang][8][MAPPED][public void org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule.appendTo(java.lang.StringBuffer;java.util.Calendar)]
[INFO][Lang][8][MAP][END]
[INFO][Lang][8][#FAIL-TESTS][2]
[INFO][Lang][9][MAP][START]
[INFO][Lang][9][MAPPED][private void org.apache.commons.lang3.time.FastDateParser.init()]
[INFO][Lang][9][MAP][END]
[INFO][Lang][9][#FAIL-TESTS][2]
[INFO][Lang][10][MAP][START]
[INFO][Lang][10][MAPPED][private static java.lang.StringBuilder org.apache.commons.lang3.time.FastDateParser.escapeRegex(java.lang.StringBuilder;java.lang.String;boolean)]
[INFO][Lang][10][MAP][END]
[INFO][Lang][10][#FAIL-TESTS][2]
[INFO][Lang][11][MAP][START]
[INFO][Lang][11][MAPPED][public static java.lang.String org.apache.commons.lang3.RandomStringUtils.random(int;int;int;boolean;boolean;char[];java.util.Random)]
[INFO][Lang][11][MAP][END]
[INFO][Lang][11][#FAIL-TESTS][1]
[INFO][Lang][12][MAP][START]
[INFO][Lang][12][MAPPED][public static java.lang.String org.apache.commons.lang3.RandomStringUtils.random(int;int;int;boolean;boolean;char[];java.util.Random)]
[INFO][Lang][12][MAP][END]
[INFO][Lang][12][#FAIL-TESTS][2]
[INFO][Lang][13][MAP][START]
[INFO][Lang][13][MAPPED][public org.apache.commons.lang3.SerializationUtils$ClassLoaderAwareObjectInputStream(java.io.InputStream;java.lang.ClassLoader) throws java.io.IOException]
[INFO][Lang][13][MAPPED][protected java.lang.Class org.apache.commons.lang3.SerializationUtils$ClassLoaderAwareObjectInputStream.resolveClass(java.io.ObjectStreamClass) throws java.io.IOException;java.lang.ClassNotFoundException]
[INFO][Lang][13][MAP][END]
[INFO][Lang][13][#FAIL-TESTS][1]
[INFO][Lang][14][MAP][START]
[INFO][Lang][14][MAPPED][public static boolean org.apache.commons.lang3.StringUtils.equals(java.lang.CharSequence;java.lang.CharSequence)]
[INFO][Lang][14][MAP][END]
[INFO][Lang][14][#FAIL-TESTS][1]
[INFO][Lang][15][MAP][START]
[INFO][Lang][15][MAPPED][private static boolean org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type;java.lang.reflect.ParameterizedType;java.util.Map)]
[INFO][Lang][15][MAPPED][private static java.util.Map org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.Class;java.lang.Class;java.util.Map)]
[INFO][Lang][15][MAP][END]
[INFO][Lang][15][#FAIL-TESTS][2]
[INFO][Lang][16][MAP][START]
[INFO][Lang][16][MAPPED][public static java.lang.Number org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String) throws java.lang.NumberFormatException]
[INFO][Lang][16][MAP][END]
[INFO][Lang][16][#FAIL-TESTS][1]
[INFO][Lang][17][MAP][START]
[INFO][Lang][17][MAPPED][public final void org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence;java.io.Writer) throws java.io.IOException]
[INFO][Lang][17][MAP][END]
[INFO][Lang][17][#FAIL-TESTS][1]
[INFO][Lang][18][MAP][START]
[INFO][Lang][18][MAPPED][protected java.util.List org.apache.commons.lang3.time.FastDateFormat.parsePattern()]
[INFO][Lang][18][MAP][END]
[INFO][Lang][18][#FAIL-TESTS][1]
[INFO][Lang][19][MAP][START]
[INFO][Lang][19][MAPPED][public int org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence;int;java.io.Writer) throws java.io.IOException]
[INFO][Lang][19][MAP][END]
[INFO][Lang][19][#FAIL-TESTS][2]
[INFO][Lang][20][MAP][START]
[INFO][Lang][20][MAPPED][public static java.lang.String org.apache.commons.lang3.StringUtils.join(java.lang.Object[];char;int;int)]
[INFO][Lang][20][MAPPED][public static java.lang.String org.apache.commons.lang3.StringUtils.join(java.lang.Object[];java.lang.String;int;int)]
[INFO][Lang][20][MAP][END]
[INFO][Lang][20][#FAIL-TESTS][2]
[INFO][Lang][21][MAP][START]
[INFO][Lang][21][MAPPED][public static boolean org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar;java.util.Calendar)]
[INFO][Lang][21][MAP][END]
[INFO][Lang][21][#FAIL-TESTS][1]
[INFO][Lang][22][MAP][START]
[INFO][Lang][22][MAPPED][private static int org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int;int)]
[INFO][Lang][22][MAP][END]
[INFO][Lang][22][#FAIL-TESTS][2]
[INFO][Lang][23][MAP][START]
[INFO][Lang][23][MAPPED][FAIL] Empty file!
[INFO][Lang][23][MAP][END]
[INFO][Lang][24][MAP][START]
[INFO][Lang][24][MAPPED][public static boolean org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)]
[INFO][Lang][24][MAP][END]
[INFO][Lang][24][#FAIL-TESTS][1]
[INFO][Lang][25][MAP][START]
[INFO][Lang][25][MAPPED][FAIL] Empty file!
[INFO][Lang][25][MAP][END]
[INFO][Lang][26][MAP][START]
[INFO][Lang][26][MAPPED][public java.lang.String org.apache.commons.lang3.time.FastDateFormat.format(java.util.Date)]
[INFO][Lang][26][MAP][END]
[INFO][Lang][26][#FAIL-TESTS][1]
[INFO][Lang][27][MAP][START]
[INFO][Lang][27][MAPPED][public static java.lang.Number org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String) throws java.lang.NumberFormatException]
[INFO][Lang][27][MAP][END]
[INFO][Lang][27][#FAIL-TESTS][1]
[INFO][Lang][28][MAP][START]
[INFO][Lang][28][MAPPED][public int org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence;int;java.io.Writer) throws java.io.IOException]
[INFO][Lang][28][MAP][END]
[INFO][Lang][28][#FAIL-TESTS][1]
[INFO][Lang][29][MAP][START]
[INFO][Lang][29][MAPPED][static float org.apache.commons.lang3.SystemUtils.toJavaVersionInt(java.lang.String)]
[INFO][Lang][29][MAP][END]
[INFO][Lang][29][#FAIL-TESTS][1]
[INFO][Lang][30][MAP][START]
[INFO][Lang][30][MAPPED][public static int org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence;char[])]
[INFO][Lang][30][MAPPED][public static boolean org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence;char[])]
[INFO][Lang][30][MAPPED][public static boolean org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence;java.lang.String)]
[INFO][Lang][30][MAPPED][public static int org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence;char[])]
[INFO][Lang][30][MAPPED][public static int org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.String;java.lang.String)]
[INFO][Lang][30][MAPPED][public static boolean org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence;char[])]
[INFO][Lang][30][MAP][END]
[INFO][Lang][30][#FAIL-TESTS][10]
[INFO][Lang][31][MAP][START]
[INFO][Lang][31][MAPPED][public static boolean org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence;char[])]
[INFO][Lang][31][MAP][END]
[INFO][Lang][31][#FAIL-TESTS][2]
[INFO][Lang][32][MAP][START]
[INFO][Lang][32][MAPPED][static boolean org.apache.commons.lang3.builder.HashCodeBuilder.isRegistered(java.lang.Object)]
[INFO][Lang][32][MAPPED][static void org.apache.commons.lang3.builder.HashCodeBuilder.register(java.lang.Object)]
[INFO][Lang][32][MAPPED][static void org.apache.commons.lang3.builder.HashCodeBuilder.unregister(java.lang.Object)]
[INFO][Lang][32][MAP][END]
[INFO][Lang][32][#FAIL-TESTS][1]
[INFO][Lang][33][MAP][START]
[INFO][Lang][33][MAPPED][public static java.lang.Class[] org.apache.commons.lang3.ClassUtils.toClass(java.lang.Object[])]
[INFO][Lang][33][MAP][END]
[INFO][Lang][33][#FAIL-TESTS][1]
[INFO][Lang][34][MAP][START]
[INFO][Lang][34][MAPPED][static java.util.Map org.apache.commons.lang3.builder.ToStringStyle.getRegistry()]
[INFO][Lang][34][MAPPED][static boolean org.apache.commons.lang3.builder.ToStringStyle.isRegistered(java.lang.Object)]
[INFO][Lang][34][MAP][END]
[INFO][Lang][34][#FAIL-TESTS][27]
[INFO][Lang][35][MAP][START]
[INFO][Lang][35][MAPPED][public static java.lang.Object[] org.apache.commons.lang3.ArrayUtils.add(java.lang.Object[];java.lang.Object)]
[INFO][Lang][35][MAPPED][public static java.lang.Object[] org.apache.commons.lang3.ArrayUtils.add(java.lang.Object[];int;java.lang.Object)]
[INFO][Lang][35][MAP][END]
[INFO][Lang][35][#FAIL-TESTS][1]
[INFO][Lang][36][MAP][START]
[INFO][Lang][36][MAPPED][public static java.lang.Number org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String) throws java.lang.NumberFormatException]
[INFO][Lang][36][MAPPED][public static boolean org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)]
[INFO][Lang][36][MAP][END]
[INFO][Lang][36][#FAIL-TESTS][2]
[INFO][Lang][37][MAP][START]
[INFO][Lang][37][MAPPED][public static java.lang.Object[] org.apache.commons.lang3.ArrayUtils.addAll(java.lang.Object[];java.lang.Object[])]
[INFO][Lang][37][MAP][END]
[INFO][Lang][37][#FAIL-TESTS][1]
[INFO][Lang][38][MAP][START]
[INFO][Lang][38][MAPPED][public java.lang.StringBuffer org.apache.commons.lang3.time.FastDateFormat.format(java.util.Calendar;java.lang.StringBuffer)]
[INFO][Lang][38][MAP][END]
[INFO][Lang][38][#FAIL-TESTS][1]
[INFO][Lang][39][MAP][START]
[INFO][Lang][39][MAPPED][private static java.lang.String org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String;java.lang.String[];java.lang.String[];boolean;int)]
[INFO][Lang][39][MAP][END]
[INFO][Lang][39][#FAIL-TESTS][1]
[INFO][Lang][40][MAP][START]
[INFO][Lang][40][MAPPED][public static boolean org.apache.commons.lang.StringUtils.containsIgnoreCase(java.lang.String;java.lang.String)]
[INFO][Lang][40][MAP][END]
[INFO][Lang][40][#FAIL-TESTS][1]
[INFO][Lang][41][MAP][START]
[INFO][Lang][41][MAPPED][public static java.lang.String org.apache.commons.lang.ClassUtils.getShortClassName(java.lang.String)]
[INFO][Lang][41][MAPPED][public static java.lang.String org.apache.commons.lang.ClassUtils.getPackageName(java.lang.String)]
[INFO][Lang][41][MAP][END]
[INFO][Lang][41][#FAIL-TESTS][2]
[INFO][Lang][42][MAP][START]
[INFO][Lang][42][MAPPED][public void org.apache.commons.lang.Entities.escape(java.io.Writer;java.lang.String) throws java.io.IOException]
[INFO][Lang][42][MAP][END]
[INFO][Lang][42][#FAIL-TESTS][1]
[INFO][Lang][43][MAP][START]
[INFO][Lang][43][MAPPED][private java.lang.StringBuffer org.apache.commons.lang.text.ExtendedMessageFormat.appendQuotedString(java.lang.String;java.text.ParsePosition;java.lang.StringBuffer;boolean)]
[INFO][Lang][43][MAP][END]
[INFO][Lang][43][#FAIL-TESTS][1]
[INFO][Lang][44][MAP][START]
[INFO][Lang][44][MAPPED][public static java.lang.Number org.apache.commons.lang.NumberUtils.createNumber(java.lang.String) throws java.lang.NumberFormatException]
[INFO][Lang][44][MAP][END]
[INFO][Lang][44][#FAIL-TESTS][1]
[INFO][Lang][45][MAP][START]
[INFO][Lang][45][MAPPED][public static java.lang.String org.apache.commons.lang.WordUtils.abbreviate(java.lang.String;int;int;java.lang.String)]
[INFO][Lang][45][MAP][END]
[INFO][Lang][45][#FAIL-TESTS][1]
[INFO][Lang][46][MAP][START]
[INFO][Lang][46][MAPPED][public static java.lang.String org.apache.commons.lang.StringEscapeUtils.escapeJava(java.lang.String)]
[INFO][Lang][46][MAPPED][public static void org.apache.commons.lang.StringEscapeUtils.escapeJava(java.io.Writer;java.lang.String) throws java.io.IOException]
[INFO][Lang][46][MAPPED][public static java.lang.String org.apache.commons.lang.StringEscapeUtils.escapeJavaScript(java.lang.String)]
[INFO][Lang][46][MAPPED][public static void org.apache.commons.lang.StringEscapeUtils.escapeJavaScript(java.io.Writer;java.lang.String) throws java.io.IOException]
[INFO][Lang][46][MAPPED][private static java.lang.String org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(java.lang.String;boolean)]
[INFO][Lang][46][MAPPED][private static void org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(java.io.Writer;java.lang.String;boolean) throws java.io.IOException]
[INFO][Lang][46][MAP][END]
[INFO][Lang][46][#FAIL-TESTS][1]
[INFO][Lang][47][MAP][START]
[INFO][Lang][47][MAPPED][public org.apache.commons.lang.text.StrBuilder org.apache.commons.lang.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object;int;char)]
[INFO][Lang][47][MAPPED][public org.apache.commons.lang.text.StrBuilder org.apache.commons.lang.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object;int;char)]
[INFO][Lang][47][MAP][END]
[INFO][Lang][47][#FAIL-TESTS][2]
[INFO][Lang][48][MAP][START]
[INFO][Lang][48][MAPPED][public org.apache.commons.lang.builder.EqualsBuilder org.apache.commons.lang.builder.EqualsBuilder.append(java.lang.Object;java.lang.Object)]
[INFO][Lang][48][MAP][END]
[INFO][Lang][48][#FAIL-TESTS][1]
[INFO][Lang][49][MAP][START]
[INFO][Lang][49][MAPPED][public org.apache.commons.lang.math.Fraction org.apache.commons.lang.math.Fraction.reduce()]
[INFO][Lang][49][MAP][END]
[INFO][Lang][49][#FAIL-TESTS][1]
[INFO][Lang][50][MAP][START]
[INFO][Lang][50][MAPPED][public static synchronized org.apache.commons.lang.time.FastDateFormat org.apache.commons.lang.time.FastDateFormat.getDateInstance(int;java.util.TimeZone;java.util.Locale)]
[INFO][Lang][50][MAPPED][public static synchronized org.apache.commons.lang.time.FastDateFormat org.apache.commons.lang.time.FastDateFormat.getDateTimeInstance(int;int;java.util.TimeZone;java.util.Locale)]
[INFO][Lang][50][MAP][END]
[INFO][Lang][50][#FAIL-TESTS][2]
[INFO][Lang][51][MAP][START]
[INFO][Lang][51][MAPPED][public static boolean org.apache.commons.lang.BooleanUtils.toBoolean(java.lang.String)]
[INFO][Lang][51][MAP][END]
[INFO][Lang][51][#FAIL-TESTS][1]
[INFO][Lang][52][MAP][START]
[INFO][Lang][52][MAPPED][private static void org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(java.io.Writer;java.lang.String;boolean) throws java.io.IOException]
[INFO][Lang][52][MAP][END]
[INFO][Lang][52][#FAIL-TESTS][1]
[INFO][Lang][53][MAP][START]
[INFO][Lang][53][MAPPED][private static void org.apache.commons.lang.time.DateUtils.modify(java.util.Calendar;int;boolean)]
[INFO][Lang][53][MAP][END]
[INFO][Lang][53][#FAIL-TESTS][1]
[INFO][Lang][54][MAP][START]
[INFO][Lang][54][MAPPED][public static java.util.Locale org.apache.commons.lang.LocaleUtils.toLocale(java.lang.String)]
[INFO][Lang][54][MAP][END]
[INFO][Lang][54][#FAIL-TESTS][1]
[INFO][Lang][55][MAP][START]
[INFO][Lang][55][MAPPED][public void org.apache.commons.lang.time.StopWatch.stop()]
[INFO][Lang][55][MAP][END]
[INFO][Lang][55][#FAIL-TESTS][1]
[INFO][Lang][56][MAP][START]
[INFO][Lang][56][MAPPED][FAIL] Empty file!
[INFO][Lang][56][MAP][END]
[INFO][Lang][57][MAP][START]
[INFO][Lang][57][MAPPED][public static boolean org.apache.commons.lang.LocaleUtils.isAvailableLocale(java.util.Locale)]
[INFO][Lang][57][MAP][END]
[INFO][Lang][57][#FAIL-TESTS][11]
[INFO][Lang][58][MAP][START]
[INFO][Lang][58][MAPPED][public static java.lang.Number org.apache.commons.lang.math.NumberUtils.createNumber(java.lang.String) throws java.lang.NumberFormatException]
[INFO][Lang][58][MAP][END]
[INFO][Lang][58][#FAIL-TESTS][1]
[INFO][Lang][59][MAP][START]
[INFO][Lang][59][MAPPED][public org.apache.commons.lang.text.StrBuilder org.apache.commons.lang.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object;int;char)]
[INFO][Lang][59][MAP][END]
[INFO][Lang][59][#FAIL-TESTS][1]
[INFO][Lang][60][MAP][START]
[INFO][Lang][60][MAPPED][public boolean org.apache.commons.lang.text.StrBuilder.contains(char)]
[INFO][Lang][60][MAPPED][public int org.apache.commons.lang.text.StrBuilder.indexOf(char;int)]
[INFO][Lang][60][MAP][END]
[INFO][Lang][60][#FAIL-TESTS][1]
[INFO][Lang][61][MAP][START]
[INFO][Lang][61][MAPPED][public int org.apache.commons.lang.text.StrBuilder.indexOf(java.lang.String;int)]
[INFO][Lang][61][MAP][END]
[INFO][Lang][61][#FAIL-TESTS][2]
[INFO][Lang][62][MAP][START]
[INFO][Lang][62][MAPPED][public java.lang.String org.apache.commons.lang.Entities.unescape(java.lang.String)]
[INFO][Lang][62][MAPPED][public void org.apache.commons.lang.Entities.unescape(java.io.Writer;java.lang.String) throws java.io.IOException]
[INFO][Lang][62][MAP][END]
[INFO][Lang][62][#FAIL-TESTS][1]
[INFO][Lang][63][MAP][START]
[INFO][Lang][63][MAPPED][public static java.lang.String org.apache.commons.lang.time.DurationFormatUtils.formatPeriod(long;long;java.lang.String;boolean;java.util.TimeZone)]
[INFO][Lang][63][MAPPED][static int org.apache.commons.lang.time.DurationFormatUtils.reduceAndCorrect(java.util.Calendar;java.util.Calendar;int;int)]
[INFO][Lang][63][MAP][END]
[INFO][Lang][63][#FAIL-TESTS][1]
[INFO][Lang][64][MAP][START]
[INFO][Lang][64][MAPPED][public int org.apache.commons.lang.enums.ValuedEnum.compareTo(java.lang.Object)]
[INFO][Lang][64][MAP][END]
[INFO][Lang][64][#FAIL-TESTS][1]
[INFO][Lang][65][MAP][START]
[INFO][Lang][65][MAPPED][private static void org.apache.commons.lang.time.DateUtils.modify(java.util.Calendar;int;boolean)]
[INFO][Lang][65][MAP][END]
[INFO][Lang][65][#FAIL-TESTS][1]
[INFO][Closure][1][MAP][START]
[INFO][Closure][1][MAPPED][private void com.google.javascript.jscomp.RemoveUnusedVars.removeUnreferencedFunctionArgs(com.google.javascript.jscomp.Scope)]
[INFO][Closure][1][MAP][END]
[INFO][Closure][1][#FAIL-TESTS][8]
[INFO][Closure][2][MAP][START]
[INFO][Closure][2][MAPPED][private void com.google.javascript.jscomp.TypeCheck.checkInterfaceConflictProperties(com.google.javascript.jscomp.NodeTraversal;com.google.javascript.rhino.Node;java.lang.String;java.util.HashMap;java.util.HashMap;com.google.javascript.rhino.jstype.ObjectType)]
[INFO][Closure][2][MAP][END]
[INFO][Closure][2][#FAIL-TESTS][1]
[INFO][Closure][3][MAP][START]
[INFO][Closure][3][MAPPED][public void com.google.javascript.jscomp.FlowSensitiveInlineVariables.enterScope(com.google.javascript.jscomp.NodeTraversal)]
[INFO][Closure][3][MAPPED][private boolean com.google.javascript.jscomp.FlowSensitiveInlineVariables$Candidate.canInline()]
[INFO][Closure][3][MAP][END]
[INFO][Closure][3][#FAIL-TESTS][3]
[INFO][Closure][4][MAP][START]
[INFO][Closure][4][MAPPED][com.google.javascript.rhino.jstype.JSType com.google.javascript.rhino.jstype.NamedType.resolveInternal(com.google.javascript.rhino.ErrorReporter;com.google.javascript.rhino.jstype.StaticScope)]
[INFO][Closure][4][MAP][END]
[INFO][Closure][4][#FAIL-TESTS][3]
[INFO][Closure][5][MAP][START]
[INFO][Closure][5][MAPPED][private boolean com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior.isInlinableObject(java.util.List)]
[INFO][Closure][5][MAP][END]
[INFO][Closure][5][#FAIL-TESTS][1]
[INFO][Closure][6][MAP][START]
[INFO][Closure][6][MAPPED][boolean com.google.javascript.jscomp.TypeValidator.expectCanAssignToPropertyOf(com.google.javascript.jscomp.NodeTraversal;com.google.javascript.rhino.Node;com.google.javascript.rhino.jstype.JSType;com.google.javascript.rhino.jstype.JSType;com.google.javascript.rhino.Node;java.lang.String)]
[INFO][Closure][6][MAPPED][boolean com.google.javascript.jscomp.TypeValidator.expectCanAssignTo(com.google.javascript.jscomp.NodeTraversal;com.google.javascript.rhino.Node;com.google.javascript.rhino.jstype.JSType;com.google.javascript.rhino.jstype.JSType;java.lang.String)]
[INFO][Closure][6][MAP][END]
[INFO][Closure][6][#FAIL-TESTS][3]
[INFO][Closure][7][MAP][START]
[INFO][Closure][7][MAPPED][public com.google.javascript.rhino.jstype.JSType com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter$RestrictByOneTypeOfResultVisitor.caseObjectType(com.google.javascript.rhino.jstype.ObjectType)]
[INFO][Closure][7][MAP][END]
[INFO][Closure][7][#FAIL-TESTS][2]
[INFO][Closure][8][MAP][START]
[INFO][Closure][8][MAPPED][private boolean com.google.javascript.jscomp.CollapseVariableDeclarations$GatherCollapses.canBeRedeclared(com.google.javascript.rhino.Node;com.google.javascript.jscomp.Scope)]
[INFO][Closure][8][MAP][END]
[INFO][Closure][8][#FAIL-TESTS][1]
[INFO][Closure][9][MAP][START]
[INFO][Closure][9][MAPPED][private java.lang.String com.google.javascript.jscomp.ProcessCommonJSModules.normalizeSourceName(java.lang.String)]
[INFO][Closure][9][MAPPED][private void com.google.javascript.jscomp.ProcessCommonJSModules$ProcessCommonJsModulesCallback.visitScript(com.google.javascript.jscomp.NodeTraversal;com.google.javascript.rhino.Node)]
[INFO][Closure][9][MAP][END]
[INFO][Closure][9][#FAIL-TESTS][1]
[INFO][Closure][10][MAP][START]
[INFO][Closure][10][MAPPED][static boolean com.google.javascript.jscomp.NodeUtil.mayBeString(com.google.javascript.rhino.Node;boolean)]
[INFO][Closure][10][MAP][END]
[INFO][Closure][10][#FAIL-TESTS][1]
[INFO][Closure][11][MAP][START]
[INFO][Closure][11][MAPPED][private void com.google.javascript.jscomp.TypeCheck.visitGetProp(com.google.javascript.jscomp.NodeTraversal;com.google.javascript.rhino.Node;com.google.javascript.rhino.Node)]
[INFO][Closure][11][MAP][END]
[INFO][Closure][11][#FAIL-TESTS][2]
[INFO][Closure][12][MAP][START]
[INFO][Closure][12][MAPPED][private boolean com.google.javascript.jscomp.MaybeReachingVariableUse.hasExceptionHandler(com.google.javascript.rhino.Node)]
[INFO][Closure][12][MAP][END]
[INFO][Closure][12][#FAIL-TESTS][1]
[INFO][Closure][13][MAP][START]
[INFO][Closure][13][MAPPED][private void com.google.javascript.jscomp.PeepholeOptimizationsPass.traverse(com.google.javascript.rhino.Node)]
[INFO][Closure][13][MAP][END]
[INFO][Closure][13][#FAIL-TESTS][1]
[INFO][Closure][14][MAP][START]
[INFO][Closure][14][MAPPED][private static com.google.javascript.rhino.Node com.google.javascript.jscomp.ControlFlowAnalysis.computeFollowNode(com.google.javascript.rhino.Node;com.google.javascript.rhino.Node;com.google.javascript.jscomp.ControlFlowAnalysis)]
[INFO][Closure][14][MAP][END]
[INFO][Closure][14][#FAIL-TESTS][3]
[INFO][Closure][15][MAP][START]
[INFO][Closure][15][MAPPED][public boolean com.google.javascript.jscomp.FlowSensitiveInlineVariables$1.apply(com.google.javascript.rhino.Node)]
[INFO][Closure][15][MAP][END]
[INFO][Closure][15][#FAIL-TESTS][1]
[INFO][Closure][16][MAP][START]
[INFO][Closure][16][MAPPED][MANUAL-CHECK][com.google.javascript.jscomp.ScopedAliases$AliasedTypeNode(com.google.javascript.rhino.Node,java.lang.String)] 					More than one mapped methods![6313,com.google.javascript.jscomp.ScopedAliases$AliasedTypeNode(com.google.javascript.jscomp.ScopedAliases;com.google.javascript.rhino.Node;com.google.javascript.rhino.Node;java.lang.String) 7598,com.google.javascript.jscomp.ScopedAliases$AliasedTypeNode(com.google.javascript.jscomp.ScopedAliases;com.google.javascript.rhino.Node;java.lang.String)]
[INFO][Closure][16][MAPPED][public void com.google.javascript.jscomp.ScopedAliases$AliasedTypeNode.applyAlias()]
[INFO][Closure][16][MAPPED][private void com.google.javascript.jscomp.ScopedAliases$Traversal.fixTypeNode(com.google.javascript.rhino.Node)]
[INFO][Closure][16][MAP][END]
[INFO][Closure][16][#FAIL-TESTS][2]
[INFO][Closure][17][MAP][START]
[INFO][Closure][17][MAPPED][private com.google.javascript.rhino.jstype.JSType com.google.javascript.jscomp.TypedScopeCreator$AbstractScopeBuilder.getDeclaredType(java.lang.String;com.google.javascript.rhino.JSDocInfo;com.google.javascript.rhino.Node;com.google.javascript.rhino.Node)]
[INFO][Closure][17][MAP][END]
[INFO][Closure][17][#FAIL-TESTS][1]
[INFO][Closure][18][MAP][START]
[INFO][Closure][18][MAPPED][com.google.javascript.rhino.Node com.google.javascript.jscomp.Compiler.parseInputs()]
[INFO][Closure][18][MAP][END]
[INFO][Closure][18][#FAIL-TESTS][1]
[INFO][Closure][19][MAP][START]
[INFO][Closure][19][MAPPED][protected void com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter.declareNameInScope(com.google.javascript.jscomp.type.FlowScope;com.google.javascript.rhino.Node;com.google.javascript.rhino.jstype.JSType)]
[INFO][Closure][19][MAP][END]
[INFO][Closure][19][#FAIL-TESTS][1]
[INFO][Closure][20][MAP][START]
[INFO][Closure][20][MAPPED][private com.google.javascript.rhino.Node com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax.tryFoldSimpleFunctionCall(com.google.javascript.rhino.Node)]
[INFO][Closure][20][MAP][END]
[INFO][Closure][20][#FAIL-TESTS][1]
[INFO][Closure][21][MAP][START]
[INFO][Closure][21][MAPPED][public void com.google.javascript.jscomp.CheckSideEffects.visit(com.google.javascript.jscomp.NodeTraversal;com.google.javascript.rhino.Node;com.google.javascript.rhino.Node)]
[INFO][Closure][21][MAP][END]
[INFO][Closure][21][#FAIL-TESTS][1]
[INFO][Closure][22][MAP][START]
[INFO][Closure][22][MAPPED][public void com.google.javascript.jscomp.CheckSideEffects.visit(com.google.javascript.jscomp.NodeTraversal;com.google.javascript.rhino.Node;com.google.javascript.rhino.Node)]
[INFO][Closure][22][MAP][END]
[INFO][Closure][22][#FAIL-TESTS][1]
[INFO][Closure][23][MAP][START]
[INFO][Closure][23][MAPPED][private com.google.javascript.rhino.Node com.google.javascript.jscomp.PeepholeFoldConstants.tryFoldArrayAccess(com.google.javascript.rhino.Node;com.google.javascript.rhino.Node;com.google.javascript.rhino.Node)]
[INFO][Closure][23][MAP][END]
[INFO][Closure][23][#FAIL-TESTS][1]
[INFO][Closure][24][MAP][START]
[INFO][Closure][24][MAPPED][private void com.google.javascript.jscomp.ScopedAliases$Traversal.findAliases(com.google.javascript.jscomp.NodeTraversal)]
[INFO][Closure][24][MAP][END]
[INFO][Closure][24][#FAIL-TESTS][1]
[INFO][Closure][25][MAP][START]
[INFO][Closure][25][MAPPED][private com.google.javascript.jscomp.type.FlowScope com.google.javascript.jscomp.TypeInference.traverseNew(com.google.javascript.rhino.Node;com.google.javascript.jscomp.type.FlowScope)]
[INFO][Closure][25][MAP][END]
[INFO][Closure][25][#FAIL-TESTS][1]
[INFO][Closure][26][MAP][START]
[INFO][Closure][26][MAPPED][private void com.google.javascript.jscomp.ProcessCommonJSModules$ProcessCommonJsModulesCallback.emitOptionalModuleExportsOverride(com.google.javascript.rhino.Node;java.lang.String)]
[INFO][Closure][26][MAPPED][private void com.google.javascript.jscomp.ProcessCommonJSModules$ProcessCommonJsModulesCallback.visitModuleExports(com.google.javascript.rhino.Node)]
[INFO][Closure][26][MAP][END]
[INFO][Closure][26][#FAIL-TESTS][7]
[INFO][Closure][27][MAP][START]
[INFO][Closure][27][MAPPED][public static com.google.javascript.rhino.Node com.google.javascript.rhino.IR.tryFinally(com.google.javascript.rhino.Node;com.google.javascript.rhino.Node)]
[INFO][Closure][27][MAPPED][public static com.google.javascript.rhino.Node com.google.javascript.rhino.IR.tryCatch(com.google.javascript.rhino.Node;com.google.javascript.rhino.Node)]
[INFO][Closure][27][MAP][END]
[INFO][Closure][27][#FAIL-TESTS][3]
[INFO][Closure][28][MAP][START]
[INFO][Closure][28][MAPPED][FAIL] Empty file!
[INFO][Closure][28][MAP][END]
[INFO][Closure][29][MAP][START]
[INFO][Closure][29][MAPPED][private boolean com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior.isInlinableObject(java.util.List)]
[INFO][Closure][29][MAP][END]
[INFO][Closure][29][#FAIL-TESTS][5]
[INFO][Closure][30][MAP][START]
[INFO][Closure][30][MAPPED][public void com.google.javascript.jscomp.FlowSensitiveInlineVariables.process(com.google.javascript.rhino.Node;com.google.javascript.rhino.Node)]
[INFO][Closure][30][MAPPED][private void com.google.javascript.jscomp.MustBeReachingVariableDef.computeDependence(com.google.javascript.jscomp.MustBeReachingVariableDef$Definition;com.google.javascript.rhino.Node)]
[INFO][Closure][30][MAPPED][boolean com.google.javascript.jscomp.MustBeReachingVariableDef.dependsOnOuterScopeVars(java.lang.String;com.google.javascript.rhino.Node)]
[INFO][Closure][30][MAP][END]
[INFO][Closure][30][#FAIL-TESTS][3]
[INFO][Closure][31][MAP][START]
[INFO][Closure][31][MAPPED][com.google.javascript.rhino.Node com.google.javascript.jscomp.Compiler.parseInputs()]
[INFO][Closure][31][MAP][END]
[INFO][Closure][31][#FAIL-TESTS][1]
[INFO][Closure][32][MAP][START]
[INFO][Closure][32][MAPPED][private com.google.javascript.jscomp.parsing.JsDocInfoParser$ExtractionInfo com.google.javascript.jscomp.parsing.JsDocInfoParser.extractMultilineTextualBlock(com.google.javascript.jscomp.parsing.JsDocToken;com.google.javascript.jscomp.parsing.JsDocInfoParser$WhitespaceOption)]
[INFO][Closure][32][MAP][END]
[INFO][Closure][32][#FAIL-TESTS][4]
[INFO][Closure][33][MAP][START]
[INFO][Closure][33][MAPPED][public void com.google.javascript.rhino.jstype.PrototypeObjectType.matchConstraint(com.google.javascript.rhino.jstype.ObjectType)]
[INFO][Closure][33][MAP][END]
[INFO][Closure][33][#FAIL-TESTS][1]
[INFO][Closure][34][MAP][START]
[INFO][Closure][34][MAPPED][void com.google.javascript.jscomp.CodeGenerator.add(com.google.javascript.rhino.Node;com.google.javascript.jscomp.CodeGenerator$Context)]
[INFO][Closure][34][MAPPED][private void com.google.javascript.jscomp.CodeGenerator.unrollBinaryOperator(com.google.javascript.rhino.Node;int;java.lang.String;com.google.javascript.jscomp.CodeGenerator$Context;com.google.javascript.jscomp.CodeGenerator$Context;int;int)]
[INFO][Closure][34][MAPPED][void com.google.javascript.jscomp.CodePrinter$PrettyCodePrinter.appendOp(java.lang.String;boolean)]
[INFO][Closure][34][MAP][END]
[INFO][Closure][34][#FAIL-TESTS][1]
[INFO][Closure][35][MAP][START]
[INFO][Closure][35][MAPPED][private void com.google.javascript.jscomp.TypeInference.inferPropertyTypesToMatchConstraint(com.google.javascript.rhino.jstype.JSType;com.google.javascript.rhino.jstype.JSType)]
[INFO][Closure][35][MAP][END]
[INFO][Closure][35][#FAIL-TESTS][1]
[INFO][Closure][36][MAP][START]
[INFO][Closure][36][MAPPED][private boolean com.google.javascript.jscomp.InlineVariables$InliningBehavior.canInline(com.google.javascript.jscomp.ReferenceCollectingCallback$Reference;com.google.javascript.jscomp.ReferenceCollectingCallback$Reference;com.google.javascript.jscomp.ReferenceCollectingCallback$Reference)]
[INFO][Closure][36][MAP][END]
[INFO][Closure][36][#FAIL-TESTS][1]
[INFO][Closure][37][MAP][START]
[INFO][Closure][37][MAPPED][private void com.google.javascript.jscomp.NodeTraversal.traverseFunction(com.google.javascript.rhino.Node;com.google.javascript.rhino.Node)]
[INFO][Closure][37][MAPPED][com.google.javascript.rhino.Node com.google.javascript.jscomp.parsing.IRFactory$TransformDispatcher.processFunctionNode(com.google.javascript.rhino.head.ast.FunctionNode)]
[INFO][Closure][37][MAP][END]
[INFO][Closure][37][#FAIL-TESTS][1]
[INFO][Closure][38][MAP][START]
[INFO][Closure][38][MAPPED][void com.google.javascript.jscomp.CodeConsumer.addNumber(double)]
[INFO][Closure][38][MAP][END]
[INFO][Closure][38][#FAIL-TESTS][1]
[INFO][Closure][39][MAP][START]
[INFO][Closure][39][MAPPED][java.lang.String com.google.javascript.rhino.jstype.PrototypeObjectType.toStringHelper(boolean)]
[INFO][Closure][39][MAP][END]
[INFO][Closure][39][#FAIL-TESTS][2]
[INFO][Closure][40][MAP][START]
[INFO][Closure][40][MAPPED][public void com.google.javascript.jscomp.NameAnalyzer$FindDeclarationsAndSetters.visit(com.google.javascript.jscomp.NodeTraversal;com.google.javascript.rhino.Node;com.google.javascript.rhino.Node)]
[INFO][Closure][40][MAP][END]
[INFO][Closure][40][#FAIL-TESTS][2]
[INFO][Closure][41][MAP][START]
[INFO][Closure][41][MAPPED][com.google.javascript.jscomp.FunctionTypeBuilder com.google.javascript.jscomp.FunctionTypeBuilder.inferFromOverriddenFunction(com.google.javascript.rhino.jstype.FunctionType;com.google.javascript.rhino.Node)]
[INFO][Closure][41][MAPPED][com.google.javascript.jscomp.FunctionTypeBuilder com.google.javascript.jscomp.FunctionTypeBuilder.inferParameterTypes(com.google.javascript.rhino.Node;com.google.javascript.rhino.JSDocInfo)]
[INFO][Closure][41][MAP][END]
[INFO][Closure][41][#FAIL-TESTS][3]
[INFO][Closure][42][MAP][START]
[INFO][Closure][42][MAPPED][com.google.javascript.rhino.Node com.google.javascript.jscomp.parsing.IRFactory$TransformDispatcher.processForInLoop(com.google.javascript.rhino.head.ast.ForInLoop)]
[INFO][Closure][42][MAP][END]
[INFO][Closure][42][#FAIL-TESTS][1]
[INFO][Closure][43][MAP][START]
[INFO][Closure][43][MAPPED][public void com.google.javascript.jscomp.TypedScopeCreator$AbstractScopeBuilder.visit(com.google.javascript.jscomp.NodeTraversal;com.google.javascript.rhino.Node;com.google.javascript.rhino.Node)]
[INFO][Closure][43][MAPPED][private void com.google.javascript.jscomp.TypedScopeCreator$AbstractScopeBuilder.attachLiteralTypes(com.google.javascript.jscomp.NodeTraversal;com.google.javascript.rhino.Node)]
[INFO][Closure][43][MAP][END]
[INFO][Closure][43][#FAIL-TESTS][2]
[INFO][Closure][44][MAP][START]
[INFO][Closure][44][MAPPED][void com.google.javascript.jscomp.CodeConsumer.add(java.lang.String)]
[INFO][Closure][44][MAP][END]
[INFO][Closure][44][#FAIL-TESTS][1]
[INFO][Closure][45][MAP][START]
[INFO][Closure][45][MAPPED][private void com.google.javascript.jscomp.RemoveUnusedVars.interpretAssigns()]
[INFO][Closure][45][MAPPED][com.google.javascript.jscomp.RemoveUnusedVars$Assign(com.google.javascript.rhino.Node;com.google.javascript.rhino.Node;boolean)]
[INFO][Closure][45][MAP][END]
[INFO][Closure][45][#FAIL-TESTS][1]
[INFO][Closure][46][MAP][START]
[INFO][Closure][46][MAPPED][public com.google.javascript.rhino.jstype.JSType com.google.javascript.rhino.jstype.RecordType.getLeastSupertype(com.google.javascript.rhino.jstype.JSType)]
[INFO][Closure][46][MAP][END]
[INFO][Closure][46][#FAIL-TESTS][3]
[INFO][Closure][47][MAP][START]
[INFO][Closure][47][MAPPED][public void com.google.javascript.jscomp.SourceMap.addMapping(com.google.javascript.rhino.Node;com.google.debugging.sourcemap.FilePosition;com.google.debugging.sourcemap.FilePosition)]
[INFO][Closure][47][MAPPED][private com.google.debugging.sourcemap.proto.Mapping$OriginalMapping com.google.debugging.sourcemap.SourceMapConsumerV3.getOriginalMappingForEntry(com.google.debugging.sourcemap.SourceMapConsumerV3$Entry)]
[INFO][Closure][47][MAP][END]
[INFO][Closure][47][#FAIL-TESTS][16]
[INFO][Closure][48][MAP][START]
[INFO][Closure][48][MAPPED][void com.google.javascript.jscomp.TypedScopeCreator$AbstractScopeBuilder.maybeDeclareQualifiedName(com.google.javascript.jscomp.NodeTraversal;com.google.javascript.rhino.JSDocInfo;com.google.javascript.rhino.Node;com.google.javascript.rhino.Node;com.google.javascript.rhino.Node)]
[INFO][Closure][48][MAP][END]
[INFO][Closure][48][#FAIL-TESTS][1]
[INFO][Closure][49][MAP][START]
[INFO][Closure][49][MAPPED][public void com.google.javascript.jscomp.MakeDeclaredNamesUnique.enterScope(com.google.javascript.jscomp.NodeTraversal)]
[INFO][Closure][49][MAPPED][public boolean com.google.javascript.jscomp.MakeDeclaredNamesUnique.shouldTraverse(com.google.javascript.jscomp.NodeTraversal;com.google.javascript.rhino.Node;com.google.javascript.rhino.Node)]
[INFO][Closure][49][MAPPED][public void com.google.javascript.jscomp.MakeDeclaredNamesUnique.visit(com.google.javascript.jscomp.NodeTraversal;com.google.javascript.rhino.Node;com.google.javascript.rhino.Node)]
[INFO][Closure][49][MAP][END]
[INFO][Closure][49][#FAIL-TESTS][66]
[INFO][Closure][50][MAP][START]
[INFO][Closure][50][MAPPED][private com.google.javascript.rhino.Node com.google.javascript.jscomp.PeepholeReplaceKnownMethods.tryFoldArrayJoin(com.google.javascript.rhino.Node)]
[INFO][Closure][50][MAP][END]
[INFO][Closure][50][#FAIL-TESTS][2]
[INFO][Closure][51][MAP][START]
[INFO][Closure][51][MAPPED][void com.google.javascript.jscomp.CodeConsumer.addNumber(double)]
[INFO][Closure][51][MAP][END]
[INFO][Closure][51][#FAIL-TESTS][1]
[INFO][Closure][52][MAP][START]
[INFO][Closure][52][MAPPED][static boolean com.google.javascript.jscomp.CodeGenerator.isSimpleNumber(java.lang.String)]
[INFO][Closure][52][MAP][END]
[INFO][Closure][52][#FAIL-TESTS][1]
[INFO][Closure][53][MAP][START]
[INFO][Closure][53][MAPPED][private void com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior.replaceAssignmentExpression(com.google.javascript.jscomp.Scope$Var;com.google.javascript.jscomp.ReferenceCollectingCallback$Reference;java.util.Map)]
[INFO][Closure][53][MAP][END]
[INFO][Closure][53][#FAIL-TESTS][1]
[INFO][Closure][54][MAP][START]
[INFO][Closure][54][MAPPED][public void com.google.javascript.rhino.jstype.FunctionType.setPrototypeBasedOn(com.google.javascript.rhino.jstype.ObjectType)]
[INFO][Closure][54][MAPPED][public boolean com.google.javascript.rhino.jstype.FunctionType.setPrototype(com.google.javascript.rhino.jstype.PrototypeObjectType)]
[INFO][Closure][54][MAPPED][void com.google.javascript.jscomp.TypedScopeCreator$AbstractScopeBuilder.maybeDeclareQualifiedName(com.google.javascript.jscomp.NodeTraversal;com.google.javascript.rhino.JSDocInfo;com.google.javascript.rhino.Node;com.google.javascript.rhino.Node;com.google.javascript.rhino.Node)]
[INFO][Closure][54][MAP][END]
[INFO][Closure][54][#FAIL-TESTS][3]
[INFO][Closure][55][MAP][START]
[INFO][Closure][55][MAPPED][private static boolean com.google.javascript.jscomp.FunctionRewriter.isReduceableFunctionExpression(com.google.javascript.rhino.Node)]
[INFO][Closure][55][MAP][END]
[INFO][Closure][55][#FAIL-TESTS][1]
[INFO][Closure][56][MAP][START]
[INFO][Closure][56][MAPPED][public java.lang.String com.google.javascript.jscomp.SourceFile.getLine(int)]
[INFO][Closure][56][MAP][END]
[INFO][Closure][56][#FAIL-TESTS][3]
[INFO][Closure][57][MAP][START]
[INFO][Closure][57][MAPPED][private static java.lang.String com.google.javascript.jscomp.ClosureCodingConvention.extractClassNameIfGoog(com.google.javascript.rhino.Node;com.google.javascript.rhino.Node;java.lang.String)]
[INFO][Closure][57][MAP][END]
[INFO][Closure][57][#FAIL-TESTS][1]
[INFO][Closure][58][MAP][START]
[INFO][Closure][58][MAPPED][private void com.google.javascript.jscomp.LiveVariablesAnalysis.computeGenKill(com.google.javascript.rhino.Node;java.util.BitSet;java.util.BitSet;boolean)]
[INFO][Closure][58][MAP][END]
[INFO][Closure][58][#FAIL-TESTS][1]
[INFO][Closure][59][MAP][START]
[INFO][Closure][59][MAPPED][public void com.google.javascript.jscomp.Compiler.initOptions(com.google.javascript.jscomp.CompilerOptions)]
[INFO][Closure][59][MAP][END]
[INFO][Closure][59][#FAIL-TESTS][1]
[INFO][Closure][60][MAP][START]
[INFO][Closure][60][MAPPED][static com.google.javascript.rhino.jstype.TernaryValue com.google.javascript.jscomp.NodeUtil.getImpureBooleanValue(com.google.javascript.rhino.Node)]
[INFO][Closure][60][MAPPED][static com.google.javascript.rhino.jstype.TernaryValue com.google.javascript.jscomp.NodeUtil.getPureBooleanValue(com.google.javascript.rhino.Node)]
[INFO][Closure][60][MAP][END]
[INFO][Closure][60][#FAIL-TESTS][2]
[INFO][Closure][61][MAP][START]
[INFO][Closure][61][MAPPED][static boolean com.google.javascript.jscomp.NodeUtil.functionCallHasSideEffects(com.google.javascript.rhino.Node;com.google.javascript.jscomp.AbstractCompiler)]
[INFO][Closure][61][MAP][END]
[INFO][Closure][61][#FAIL-TESTS][3]
[INFO][Closure][62][MAP][START]
[INFO][Closure][62][MAPPED][private java.lang.String com.google.javascript.jscomp.LightweightMessageFormatter.format(com.google.javascript.jscomp.JSError;boolean)]
[INFO][Closure][62][MAP][END]
[INFO][Closure][62][#FAIL-TESTS][2]
[INFO][Closure][63][MAP][START]
[INFO][Closure][63][MAPPED][private java.lang.String com.google.javascript.jscomp.LightweightMessageFormatter.format(com.google.javascript.jscomp.JSError;boolean)]
[INFO][Closure][63][MAP][END]
[INFO][Closure][63][#FAIL-TESTS][2]
[INFO][Closure][64][MAP][START]
[INFO][Closure][64][MAPPED][public void com.google.javascript.jscomp.Compiler.toSource(com.google.javascript.jscomp.Compiler$CodeBuilder;int;com.google.javascript.rhino.Node)]
[INFO][Closure][64][MAPPED][java.lang.String com.google.javascript.jscomp.Compiler.toSource(com.google.javascript.rhino.Node)]
[INFO][Closure][64][MAPPED][private java.lang.String com.google.javascript.jscomp.Compiler.toSource(com.google.javascript.rhino.Node;com.google.javascript.jscomp.SourceMap)]
[INFO][Closure][64][MAP][END]
[INFO][Closure][64][#FAIL-TESTS][1]
[INFO][Closure][65][MAP][START]
[INFO][Closure][65][MAPPED][static java.lang.String com.google.javascript.jscomp.CodeGenerator.strEscape(java.lang.String;char;java.lang.String;java.lang.String;java.lang.String;java.nio.charset.CharsetEncoder)]
[INFO][Closure][65][MAP][END]
[INFO][Closure][65][#FAIL-TESTS][1]
[INFO][Closure][66][MAP][START]
[INFO][Closure][66][MAPPED][public void com.google.javascript.jscomp.TypeCheck.visit(com.google.javascript.jscomp.NodeTraversal;com.google.javascript.rhino.Node;com.google.javascript.rhino.Node)]
[INFO][Closure][66][MAP][END]
[INFO][Closure][66][#FAIL-TESTS][2]
[INFO][Closure][67][MAP][START]
[INFO][Closure][67][MAPPED][private boolean com.google.javascript.jscomp.AnalyzePrototypeProperties$ProcessProperties.isPrototypePropertyAssign(com.google.javascript.rhino.Node)]
[INFO][Closure][67][MAP][END]
[INFO][Closure][67][#FAIL-TESTS][1]
[INFO][Closure][68][MAP][START]
[INFO][Closure][68][MAPPED][boolean com.google.javascript.jscomp.parsing.JsDocInfoParser.parse()]
[INFO][Closure][68][MAPPED][private com.google.javascript.rhino.Node com.google.javascript.jscomp.parsing.JsDocInfoParser.parseBasicTypeExpression(com.google.javascript.jscomp.parsing.JsDocToken)]
[INFO][Closure][68][MAPPED][private com.google.javascript.rhino.Node com.google.javascript.jscomp.parsing.JsDocInfoParser.parseFunctionType(com.google.javascript.jscomp.parsing.JsDocToken)]
[INFO][Closure][68][MAP][END]
[INFO][Closure][68][#FAIL-TESTS][1]
[INFO][Closure][69][MAP][START]
[INFO][Closure][69][MAPPED][private void com.google.javascript.jscomp.TypeCheck.visitCall(com.google.javascript.jscomp.NodeTraversal;com.google.javascript.rhino.Node)]
[INFO][Closure][69][MAP][END]
[INFO][Closure][69][#FAIL-TESTS][3]
[INFO][Closure][70][MAP][START]
[INFO][Closure][70][MAPPED][private void com.google.javascript.jscomp.TypedScopeCreator$LocalScopeBuilder.declareArguments(com.google.javascript.rhino.Node)]
[INFO][Closure][70][MAP][END]
[INFO][Closure][70][#FAIL-TESTS][5]
[INFO][Closure][71][MAP][START]
[INFO][Closure][71][MAPPED][private void com.google.javascript.jscomp.CheckAccessControls.checkPropertyVisibility(com.google.javascript.jscomp.NodeTraversal;com.google.javascript.rhino.Node;com.google.javascript.rhino.Node)]
[INFO][Closure][71][MAP][END]
[INFO][Closure][71][#FAIL-TESTS][2]
[INFO][Closure][72][MAP][START]
[INFO][Closure][72][MAPPED][private void com.google.javascript.jscomp.FunctionToBlockMutator.makeLocalNamesUnique(com.google.javascript.rhino.Node;boolean)]
[INFO][Closure][72][MAPPED][private void com.google.javascript.jscomp.RenameLabels$ProcessLabels.visitLabel(com.google.javascript.rhino.Node;com.google.javascript.rhino.Node)]
[INFO][Closure][72][MAP][END]
[INFO][Closure][72][#FAIL-TESTS][1]
[INFO][Closure][73][MAP][START]
[INFO][Closure][73][MAPPED][static java.lang.String com.google.javascript.jscomp.CodeGenerator.strEscape(java.lang.String;char;java.lang.String;java.lang.String;java.lang.String;java.nio.charset.CharsetEncoder)]
[INFO][Closure][73][MAP][END]
[INFO][Closure][73][#FAIL-TESTS][1]
[INFO][Closure][74][MAP][START]
[INFO][Closure][74][MAPPED][private com.google.javascript.rhino.Node com.google.javascript.jscomp.PeepholeFoldConstants.tryFoldComparison(com.google.javascript.rhino.Node;com.google.javascript.rhino.Node;com.google.javascript.rhino.Node)]
[INFO][Closure][74][MAP][END]
[INFO][Closure][74][#FAIL-TESTS][3]
[INFO][Closure][75][MAP][START]
[INFO][Closure][75][MAPPED][static java.lang.Double com.google.javascript.jscomp.NodeUtil.getStringNumberValue(java.lang.String)]
[INFO][Closure][75][MAPPED][static com.google.javascript.rhino.jstype.TernaryValue com.google.javascript.jscomp.NodeUtil.isStrWhiteSpaceChar(int)]
[INFO][Closure][75][MAP][END]
[INFO][Closure][75][#FAIL-TESTS][1]
[INFO][Closure][76][MAP][START]
[INFO][Closure][76][MAPPED][private boolean com.google.javascript.jscomp.DeadAssignmentsElimination.isVariableStillLiveWithinExpression(com.google.javascript.rhino.Node;com.google.javascript.rhino.Node;java.lang.String)]
[INFO][Closure][76][MAPPED][private com.google.javascript.jscomp.DeadAssignmentsElimination$VariableLiveness com.google.javascript.jscomp.DeadAssignmentsElimination.isVariableReadBeforeKill(com.google.javascript.rhino.Node;java.lang.String)]
[INFO][Closure][76][MAP][END]
[INFO][Closure][76][#FAIL-TESTS][4]
[INFO][Closure][77][MAP][START]
[INFO][Closure][77][MAPPED][static java.lang.String com.google.javascript.jscomp.CodeGenerator.strEscape(java.lang.String;char;java.lang.String;java.lang.String;java.lang.String;java.nio.charset.CharsetEncoder)]
[INFO][Closure][77][MAP][END]
[INFO][Closure][77][#FAIL-TESTS][1]
[INFO][Closure][78][MAP][START]
[INFO][Closure][78][MAPPED][private com.google.javascript.rhino.Node com.google.javascript.jscomp.PeepholeFoldConstants.performArithmeticOp(int;com.google.javascript.rhino.Node;com.google.javascript.rhino.Node)]
[INFO][Closure][78][MAP][END]
[INFO][Closure][78][#FAIL-TESTS][1]
[INFO][Closure][79][MAP][START]
[INFO][Closure][79][MAPPED][public void com.google.javascript.jscomp.Normalize.process(com.google.javascript.rhino.Node;com.google.javascript.rhino.Node)]
[INFO][Closure][79][MAPPED][private void com.google.javascript.jscomp.VarCheck.createSynthesizedExternVar(java.lang.String)]
[INFO][Closure][79][MAP][END]
[INFO][Closure][79][#FAIL-TESTS][5]
[INFO][Closure][80][MAP][START]
[INFO][Closure][80][MAPPED][static boolean com.google.javascript.jscomp.NodeUtil.isBooleanResultHelper(com.google.javascript.rhino.Node)]
[INFO][Closure][80][MAPPED][static boolean com.google.javascript.jscomp.NodeUtil.evaluatesToLocalValue(com.google.javascript.rhino.Node;com.google.common.base.Predicate)]
[INFO][Closure][80][MAP][END]
[INFO][Closure][80][#FAIL-TESTS][2]
[INFO][Closure][81][MAP][START]
[INFO][Closure][81][MAPPED][com.google.javascript.rhino.Node com.google.javascript.jscomp.parsing.IRFactory$TransformDispatcher.processFunctionNode(com.google.javascript.jscomp.mozilla.rhino.ast.FunctionNode)]
[INFO][Closure][81][MAP][END]
[INFO][Closure][81][#FAIL-TESTS][1]
[INFO][Closure][82][MAP][START]
[INFO][Closure][82][MAPPED][public final boolean com.google.javascript.rhino.jstype.JSType.isEmptyType()]
[INFO][Closure][82][MAP][END]
[INFO][Closure][82][#FAIL-TESTS][2]
[INFO][Closure][83][MAP][START]
[INFO][Closure][83][MAPPED][public int com.google.javascript.jscomp.CommandLineRunner$Flags$BooleanOptionHandler.parseArguments(org.kohsuke.args4j.spi.Parameters) throws org.kohsuke.args4j.CmdLineException]
[INFO][Closure][83][MAP][END]
[INFO][Closure][83][#FAIL-TESTS][1]
[INFO][Closure][84][MAP][START]
[INFO][Closure][84][MAPPED][com.google.javascript.rhino.Node com.google.javascript.jscomp.parsing.IRFactory$TransformDispatcher.processAssignment(com.google.javascript.jscomp.mozilla.rhino.ast.Assignment)]
[INFO][Closure][84][MAPPED][com.google.javascript.rhino.Node com.google.javascript.jscomp.parsing.IRFactory$TransformDispatcher.processUnaryExpression(com.google.javascript.jscomp.mozilla.rhino.ast.UnaryExpression)]
[INFO][Closure][84][MAP][END]
[INFO][Closure][84][#FAIL-TESTS][1]
[INFO][Closure][85][MAP][START]
[INFO][Closure][85][MAPPED][private com.google.javascript.rhino.Node com.google.javascript.jscomp.UnreachableCodeElimination.tryRemoveUnconditionalBranching(com.google.javascript.rhino.Node)]
[INFO][Closure][85][MAPPED][private com.google.javascript.rhino.Node com.google.javascript.jscomp.UnreachableCodeElimination.computeFollowing(com.google.javascript.rhino.Node)]
[INFO][Closure][85][MAP][END]
[INFO][Closure][85][#FAIL-TESTS][2]
[INFO][Closure][86][MAP][START]
[INFO][Closure][86][MAPPED][static boolean com.google.javascript.jscomp.NodeUtil.evaluatesToLocalValue(com.google.javascript.rhino.Node;com.google.common.base.Predicate)]
[INFO][Closure][86][MAP][END]
[INFO][Closure][86][#FAIL-TESTS][7]
[INFO][Closure][87][MAP][START]
[INFO][Closure][87][MAPPED][private boolean com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax.isFoldableExpressBlock(com.google.javascript.rhino.Node)]
[INFO][Closure][87][MAP][END]
[INFO][Closure][87][#FAIL-TESTS][1]
[INFO][Closure][88][MAP][START]
[INFO][Closure][88][MAPPED][private com.google.javascript.jscomp.DeadAssignmentsElimination$VariableLiveness com.google.javascript.jscomp.DeadAssignmentsElimination.isVariableReadBeforeKill(com.google.javascript.rhino.Node;java.lang.String)]
[INFO][Closure][88][MAP][END]
[INFO][Closure][88][#FAIL-TESTS][7]
[INFO][Closure][89][MAP][START]
[INFO][Closure][89][MAPPED][private void com.google.javascript.jscomp.CollapseProperties.updateSimpleDeclaration(java.lang.String;com.google.javascript.jscomp.GlobalNamespace$Name;com.google.javascript.jscomp.GlobalNamespace$Ref)]
[INFO][Closure][89][MAPPED][boolean com.google.javascript.jscomp.GlobalNamespace$Name.canCollapseUnannotatedChildNames()]
[INFO][Closure][89][MAP][END]
[INFO][Closure][89][#FAIL-TESTS][8]
[INFO][Closure][90][MAP][START]
[INFO][Closure][90][MAPPED][com.google.javascript.rhino.jstype.JSType com.google.javascript.rhino.jstype.FunctionType.resolveInternal(com.google.javascript.rhino.ErrorReporter;com.google.javascript.rhino.jstype.StaticScope)]
[INFO][Closure][90][MAPPED][public boolean com.google.javascript.jscomp.FunctionTypeBuilder$ThisTypeValidator.apply(com.google.javascript.rhino.jstype.JSType)]
[INFO][Closure][90][MAP][END]
[INFO][Closure][90][#FAIL-TESTS][2]
[INFO][Closure][91][MAP][START]
[INFO][Closure][91][MAPPED][public boolean com.google.javascript.jscomp.CheckGlobalThis.shouldTraverse(com.google.javascript.jscomp.NodeTraversal;com.google.javascript.rhino.Node;com.google.javascript.rhino.Node)]
[INFO][Closure][91][MAP][END]
[INFO][Closure][91][#FAIL-TESTS][1]
[INFO][Closure][92][MAP][START]
[INFO][Closure][92][MAPPED][void com.google.javascript.jscomp.ProcessClosurePrimitives$ProvidedName.replace()]
[INFO][Closure][92][MAP][END]
[INFO][Closure][92][#FAIL-TESTS][1]
[INFO][Closure][93][MAP][START]
[INFO][Closure][93][MAPPED][void com.google.javascript.jscomp.ProcessClosurePrimitives$ProvidedName.replace()]
[INFO][Closure][93][MAP][END]
[INFO][Closure][93][#FAIL-TESTS][1]
[INFO][Closure][94][MAP][START]
[INFO][Closure][94][MAPPED][static boolean com.google.javascript.jscomp.NodeUtil.isValidDefineValue(com.google.javascript.rhino.Node;java.util.Set)]
[INFO][Closure][94][MAP][END]
[INFO][Closure][94][#FAIL-TESTS][3]
[INFO][Closure][95][MAP][START]
[INFO][Closure][95][MAPPED][void com.google.javascript.jscomp.TypedScopeCreator$AbstractScopeBuilder.defineSlot(com.google.javascript.rhino.Node;com.google.javascript.rhino.Node;com.google.javascript.rhino.jstype.JSType;boolean)]
[INFO][Closure][95][MAP][END]
[INFO][Closure][95][#FAIL-TESTS][2]
[INFO][Closure][96][MAP][START]
[INFO][Closure][96][MAPPED][private void com.google.javascript.jscomp.TypeCheck.visitParameterList(com.google.javascript.jscomp.NodeTraversal;com.google.javascript.rhino.Node;com.google.javascript.rhino.jstype.FunctionType)]
[INFO][Closure][96][MAP][END]
[INFO][Closure][96][#FAIL-TESTS][1]
[INFO][Closure][97][MAP][START]
[INFO][Closure][97][MAPPED][private com.google.javascript.rhino.Node com.google.javascript.jscomp.PeepholeFoldConstants.tryFoldShift(com.google.javascript.rhino.Node;com.google.javascript.rhino.Node;com.google.javascript.rhino.Node)]
[INFO][Closure][97][MAP][END]
[INFO][Closure][97][#FAIL-TESTS][1]
[INFO][Closure][98][MAP][START]
[INFO][Closure][98][MAPPED][boolean com.google.javascript.jscomp.ReferenceCollectingCallback$ReferenceCollection.isAssignedOnceInLifetime()]
[INFO][Closure][98][MAPPED][com.google.javascript.jscomp.ReferenceCollectingCallback$BasicBlock(com.google.javascript.jscomp.ReferenceCollectingCallback$BasicBlock;com.google.javascript.rhino.Node)]
[INFO][Closure][98][MAP][END]
[INFO][Closure][98][#FAIL-TESTS][1]
[INFO][Closure][99][MAP][START]
[INFO][Closure][99][MAPPED][public boolean com.google.javascript.jscomp.CheckGlobalThis.shouldTraverse(com.google.javascript.jscomp.NodeTraversal;com.google.javascript.rhino.Node;com.google.javascript.rhino.Node)]
[INFO][Closure][99][MAP][END]
[INFO][Closure][99][#FAIL-TESTS][3]
[INFO][Closure][100][MAP][START]
[INFO][Closure][100][MAPPED][public boolean com.google.javascript.jscomp.CheckGlobalThis.shouldTraverse(com.google.javascript.jscomp.NodeTraversal;com.google.javascript.rhino.Node;com.google.javascript.rhino.Node)]
[INFO][Closure][100][MAPPED][private boolean com.google.javascript.jscomp.CheckGlobalThis.shouldReportThis(com.google.javascript.rhino.Node;com.google.javascript.rhino.Node)]
[INFO][Closure][100][MAP][END]
[INFO][Closure][100][#FAIL-TESTS][9]
[INFO][Closure][101][MAP][START]
[INFO][Closure][101][MAPPED][protected com.google.javascript.jscomp.CompilerOptions com.google.javascript.jscomp.CommandLineRunner.createOptions()]
[INFO][Closure][101][MAP][END]
[INFO][Closure][101][#FAIL-TESTS][1]
[INFO][Closure][102][MAP][START]
[INFO][Closure][102][MAPPED][public void com.google.javascript.jscomp.Normalize.process(com.google.javascript.rhino.Node;com.google.javascript.rhino.Node)]
[INFO][Closure][102][MAP][END]
[INFO][Closure][102][#FAIL-TESTS][1]
[INFO][Closure][103][MAP][START]
[INFO][Closure][103][MAPPED][private static boolean com.google.javascript.jscomp.ControlFlowAnalysis.mayThrowException(com.google.javascript.rhino.Node)]
[INFO][Closure][103][MAPPED][public com.google.javascript.rhino.jstype.ObjectType com.google.javascript.jscomp.DisambiguateProperties$JSTypeSystem.getTypeWithProperty(java.lang.String;com.google.javascript.rhino.jstype.JSType)]
[INFO][Closure][103][MAP][END]
[INFO][Closure][103][#FAIL-TESTS][3]
[INFO][Closure][104][MAP][START]
[INFO][Closure][104][MAPPED][com.google.javascript.rhino.jstype.JSType com.google.javascript.rhino.jstype.UnionType.meet(com.google.javascript.rhino.jstype.JSType)]
[INFO][Closure][104][MAP][END]
[INFO][Closure][104][#FAIL-TESTS][1]
[INFO][Closure][105][MAP][START]
[INFO][Closure][105][MAPPED][void com.google.javascript.jscomp.FoldConstants.tryFoldStringJoin(com.google.javascript.jscomp.NodeTraversal;com.google.javascript.rhino.Node;com.google.javascript.rhino.Node;com.google.javascript.rhino.Node;com.google.javascript.rhino.Node)]
[INFO][Closure][105][MAP][END]
[INFO][Closure][105][#FAIL-TESTS][1]
[INFO][Closure][106][MAP][START]
[INFO][Closure][106][MAPPED][boolean com.google.javascript.jscomp.GlobalNamespace$Name.canCollapseUnannotatedChildNames()]
[INFO][Closure][106][MAPPED][public boolean com.google.javascript.rhino.JSDocInfoBuilder.recordBlockDescription(java.lang.String)]
[INFO][Closure][106][MAP][END]
[INFO][Closure][106][#FAIL-TESTS][4]
[INFO][Closure][107][MAP][START]
[INFO][Closure][107][MAPPED][protected com.google.javascript.jscomp.CompilerOptions com.google.javascript.jscomp.CommandLineRunner.createOptions()]
[INFO][Closure][107][MAP][END]
[INFO][Closure][107][#FAIL-TESTS][1]
[INFO][Closure][108][MAP][START]
[INFO][Closure][108][MAPPED][public void com.google.javascript.jscomp.ScopedAliases$Traversal.exitScope(com.google.javascript.jscomp.NodeTraversal)]
[INFO][Closure][108][MAPPED][private void com.google.javascript.jscomp.ScopedAliases$Traversal.findAliases(com.google.javascript.jscomp.NodeTraversal)]
[INFO][Closure][108][MAPPED][public void com.google.javascript.jscomp.ScopedAliases$Traversal.visit(com.google.javascript.jscomp.NodeTraversal;com.google.javascript.rhino.Node;com.google.javascript.rhino.Node)]
[INFO][Closure][108][MAP][END]
[INFO][Closure][108][#FAIL-TESTS][1]
[INFO][Closure][109][MAP][START]
[INFO][Closure][109][MAPPED][private com.google.javascript.rhino.Node com.google.javascript.jscomp.parsing.JsDocInfoParser.parseContextTypeExpression(com.google.javascript.jscomp.parsing.JsDocToken)]
[INFO][Closure][109][MAP][END]
[INFO][Closure][109][#FAIL-TESTS][2]
[INFO][Closure][110][MAP][START]
[INFO][Closure][110][MAPPED][public com.google.javascript.rhino.Node com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node)]
[INFO][Closure][110][MAPPED][private void com.google.javascript.jscomp.ScopedAliases$Traversal.findAliases(com.google.javascript.jscomp.NodeTraversal)]
[INFO][Closure][110][MAP][END]
[INFO][Closure][110][#FAIL-TESTS][2]
[INFO][Closure][111][MAP][START]
[INFO][Closure][111][MAPPED][protected com.google.javascript.rhino.jstype.JSType com.google.javascript.jscomp.type.ClosureReverseAbstractInterpreter$1.caseTopType(com.google.javascript.rhino.jstype.JSType)]
[INFO][Closure][111][MAP][END]
[INFO][Closure][111][#FAIL-TESTS][1]
[INFO][Closure][112][MAP][START]
[INFO][Closure][112][MAPPED][private boolean com.google.javascript.jscomp.TypeInference.inferTemplatedTypesForCall(com.google.javascript.rhino.Node;com.google.javascript.rhino.jstype.FunctionType)]
[INFO][Closure][112][MAP][END]
[INFO][Closure][112][#FAIL-TESTS][2]
[INFO][Closure][113][MAP][START]
[INFO][Closure][113][MAPPED][private void com.google.javascript.jscomp.ProcessClosurePrimitives.processRequireCall(com.google.javascript.jscomp.NodeTraversal;com.google.javascript.rhino.Node;com.google.javascript.rhino.Node)]
[INFO][Closure][113][MAP][END]
[INFO][Closure][113][#FAIL-TESTS][1]
[INFO][Closure][114][MAP][START]
[INFO][Closure][114][MAPPED][private void com.google.javascript.jscomp.NameAnalyzer$FindDependencyScopes.recordAssignment(com.google.javascript.jscomp.NodeTraversal;com.google.javascript.rhino.Node;com.google.javascript.rhino.Node)]
[INFO][Closure][114][MAP][END]
[INFO][Closure][114][#FAIL-TESTS][1]
[INFO][Closure][115][MAP][START]
[INFO][Closure][115][MAPPED][private com.google.javascript.jscomp.FunctionInjector$CanInlineResult com.google.javascript.jscomp.FunctionInjector.canInlineReferenceDirectly(com.google.javascript.rhino.Node;com.google.javascript.rhino.Node)]
[INFO][Closure][115][MAP][END]
[INFO][Closure][115][#FAIL-TESTS][7]
[INFO][Closure][116][MAP][START]
[INFO][Closure][116][MAPPED][private com.google.javascript.jscomp.FunctionInjector$CanInlineResult com.google.javascript.jscomp.FunctionInjector.canInlineReferenceDirectly(com.google.javascript.rhino.Node;com.google.javascript.rhino.Node)]
[INFO][Closure][116][MAP][END]
[INFO][Closure][116][#FAIL-TESTS][8]
[INFO][Closure][117][MAP][START]
[INFO][Closure][117][MAPPED][java.lang.String com.google.javascript.jscomp.TypeValidator.getReadableJSTypeName(com.google.javascript.rhino.Node;boolean)]
[INFO][Closure][117][MAP][END]
[INFO][Closure][117][#FAIL-TESTS][1]
[INFO][Closure][118][MAP][START]
[INFO][Closure][118][MAPPED][private void com.google.javascript.jscomp.DisambiguateProperties$FindRenameableProperties.handleObjectLit(com.google.javascript.jscomp.NodeTraversal;com.google.javascript.rhino.Node)]
[INFO][Closure][118][MAP][END]
[INFO][Closure][118][#FAIL-TESTS][2]
[INFO][Closure][119][MAP][START]
[INFO][Closure][119][MAPPED][public void com.google.javascript.jscomp.GlobalNamespace$BuildGlobalNamespace.collect(com.google.javascript.jscomp.JSModule;com.google.javascript.jscomp.Scope;com.google.javascript.rhino.Node)]
[INFO][Closure][119][MAP][END]
[INFO][Closure][119][#FAIL-TESTS][1]
[INFO][Closure][120][MAP][START]
[INFO][Closure][120][MAPPED][boolean com.google.javascript.jscomp.ReferenceCollectingCallback$ReferenceCollection.isAssignedOnceInLifetime()]
[INFO][Closure][120][MAP][END]
[INFO][Closure][120][#FAIL-TESTS][1]
[INFO][Closure][121][MAP][START]
[INFO][Closure][121][MAPPED][private void com.google.javascript.jscomp.InlineVariables$InliningBehavior.inlineNonConstants(com.google.javascript.jscomp.Scope$Var;com.google.javascript.jscomp.ReferenceCollectingCallback$ReferenceCollection;boolean)]
[INFO][Closure][121][MAP][END]
[INFO][Closure][121][#FAIL-TESTS][1]
[INFO][Closure][122][MAP][START]
[INFO][Closure][122][MAPPED][private void com.google.javascript.jscomp.parsing.IRFactory.handleBlockComment(com.google.javascript.rhino.head.ast.Comment)]
[INFO][Closure][122][MAP][END]
[INFO][Closure][122][#FAIL-TESTS][3]
[INFO][Closure][123][MAP][START]
[INFO][Closure][123][MAPPED][void com.google.javascript.jscomp.CodeGenerator.add(com.google.javascript.rhino.Node;com.google.javascript.jscomp.CodeGenerator$Context)]
[INFO][Closure][123][MAP][END]
[INFO][Closure][123][#FAIL-TESTS][1]
[INFO][Closure][124][MAP][START]
[INFO][Closure][124][MAPPED][private boolean com.google.javascript.jscomp.ExploitAssigns.isSafeReplacement(com.google.javascript.rhino.Node;com.google.javascript.rhino.Node)]
[INFO][Closure][124][MAP][END]
[INFO][Closure][124][#FAIL-TESTS][1]
[INFO][Closure][125][MAP][START]
[INFO][Closure][125][MAPPED][private void com.google.javascript.jscomp.TypeCheck.visitNew(com.google.javascript.jscomp.NodeTraversal;com.google.javascript.rhino.Node)]
[INFO][Closure][125][MAP][END]
[INFO][Closure][125][#FAIL-TESTS][1]
[INFO][Closure][126][MAP][START]
[INFO][Closure][126][MAPPED][void com.google.javascript.jscomp.MinimizeExitPoints.tryMinimizeExits(com.google.javascript.rhino.Node;int;java.lang.String)]
[INFO][Closure][126][MAP][END]
[INFO][Closure][126][#FAIL-TESTS][2]
[INFO][Closure][127][MAP][START]
[INFO][Closure][127][MAPPED][private void com.google.javascript.jscomp.UnreachableCodeElimination$EliminationPass.tryRemoveUnconditionalBranching(com.google.javascript.rhino.Node)]
[INFO][Closure][127][MAP][END]
[INFO][Closure][127][#FAIL-TESTS][6]
[INFO][Closure][128][MAP][START]
[INFO][Closure][128][MAPPED][static boolean com.google.javascript.jscomp.CodeGenerator.isSimpleNumber(java.lang.String)]
[INFO][Closure][128][MAP][END]
[INFO][Closure][128][#FAIL-TESTS][1]
[INFO][Closure][129][MAP][START]
[INFO][Closure][129][MAPPED][private void com.google.javascript.jscomp.PrepareAst$PrepareAnnotations.annotateCalls(com.google.javascript.rhino.Node)]
[INFO][Closure][129][MAP][END]
[INFO][Closure][129][#FAIL-TESTS][1]
[INFO][Closure][130][MAP][START]
[INFO][Closure][130][MAPPED][private void com.google.javascript.jscomp.CollapseProperties.inlineAliases(com.google.javascript.jscomp.GlobalNamespace)]
[INFO][Closure][130][MAP][END]
[INFO][Closure][130][#FAIL-TESTS][1]
[INFO][Closure][131][MAP][START]
[INFO][Closure][131][MAPPED][public static boolean com.google.javascript.rhino.TokenStream.isJSIdentifier(java.lang.String)]
[INFO][Closure][131][MAP][END]
[INFO][Closure][131][#FAIL-TESTS][2]
[INFO][Closure][132][MAP][START]
[INFO][Closure][132][MAPPED][private com.google.javascript.rhino.Node com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax.tryMinimizeIf(com.google.javascript.rhino.Node)]
[INFO][Closure][132][MAP][END]
[INFO][Closure][132][#FAIL-TESTS][1]
[INFO][Closure][133][MAP][START]
[INFO][Closure][133][MAPPED][private java.lang.String com.google.javascript.jscomp.parsing.JsDocInfoParser.getRemainingJSDocLine()]
[INFO][Closure][133][MAP][END]
[INFO][Closure][133][#FAIL-TESTS][1]
[INFO][Math][1][MAP][START]
[INFO][Math][1][MAPPED][private org.apache.commons.math3.fraction.BigFraction(double;double;int;int) throws org.apache.commons.math3.fraction.FractionConversionException]
[INFO][Math][1][MAPPED][private org.apache.commons.math3.fraction.Fraction(double;double;int;int) throws org.apache.commons.math3.fraction.FractionConversionException]
[INFO][Math][1][MAP][END]
[INFO][Math][1][#FAIL-TESTS][2]
[INFO][Math][2][MAP][START]
[INFO][Math][2][MAPPED][public double org.apache.commons.math3.distribution.HypergeometricDistribution.getNumericalMean()]
[INFO][Math][2][MAP][END]
[INFO][Math][2][#FAIL-TESTS][1]
[INFO][Math][3][MAP][START]
[INFO][Math][3][MAPPED][public static double org.apache.commons.math3.util.MathArrays.linearCombination(double[];double[]) throws org.apache.commons.math3.exception.DimensionMismatchException]
[INFO][Math][3][MAP][END]
[INFO][Math][3][#FAIL-TESTS][1]
[INFO][Math][4][MAP][START]
[INFO][Math][4][MAPPED][public org.apache.commons.math3.geometry.euclidean.twod.Vector2D org.apache.commons.math3.geometry.euclidean.twod.SubLine.intersection(org.apache.commons.math3.geometry.euclidean.twod.SubLine;boolean)]
[INFO][Math][4][MAPPED][public org.apache.commons.math3.geometry.euclidean.threed.Vector3D org.apache.commons.math3.geometry.euclidean.threed.SubLine.intersection(org.apache.commons.math3.geometry.euclidean.threed.SubLine;boolean)]
[INFO][Math][4][MAP][END]
[INFO][Math][4][#FAIL-TESTS][2]
[INFO][Math][5][MAP][START]
[INFO][Math][5][MAPPED][public org.apache.commons.math3.complex.Complex org.apache.commons.math3.complex.Complex.reciprocal()]
[INFO][Math][5][MAP][END]
[INFO][Math][5][#FAIL-TESTS][1]
[INFO][Math][6][MAP][START]
[INFO][Math][6][MAPPED][public org.apache.commons.math3.optim.PointVectorValuePair org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer.doOptimize()]
[INFO][Math][6][MAPPED][protected org.apache.commons.math3.optim.PointValuePair org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.doOptimize()]
[INFO][Math][6][MAPPED][protected org.apache.commons.math3.optim.PointVectorValuePair org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.doOptimize()]
[INFO][Math][6][MAPPED][protected org.apache.commons.math3.optim.BaseOptimizer(org.apache.commons.math3.optim.ConvergenceChecker)]
[INFO][Math][6][MAPPED][protected org.apache.commons.math3.optim.PointValuePair org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.doOptimize()]
[INFO][Math][6][MAPPED][protected org.apache.commons.math3.optim.PointValuePair org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.doOptimize()]
[INFO][Math][6][MAPPED][protected org.apache.commons.math3.optim.PointValuePair org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.doOptimize()]
[INFO][Math][6][MAP][END]
[INFO][Math][6][#FAIL-TESTS][28]
[INFO][Math][7][MAP][START]
[INFO][Math][7][MAPPED][protected double org.apache.commons.math3.ode.AbstractIntegrator.acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator;double[];double[];double) throws org.apache.commons.math3.exception.MaxCountExceededException;org.apache.commons.math3.exception.DimensionMismatchException;org.apache.commons.math3.exception.NoBracketingException]
[INFO][Math][7][MAP][END]
[INFO][Math][7][#FAIL-TESTS][1]
[INFO][Math][8][MAP][START]
[INFO][Math][8][MAPPED][public java.lang.Object[] org.apache.commons.math3.distribution.DiscreteDistribution.sample(int) throws org.apache.commons.math3.exception.NotStrictlyPositiveException]
[INFO][Math][8][MAP][END]
[INFO][Math][8][#FAIL-TESTS][1]
[INFO][Math][9][MAP][START]
[INFO][Math][9][MAPPED][public org.apache.commons.math3.geometry.euclidean.threed.Line org.apache.commons.math3.geometry.euclidean.threed.Line.revert()]
[INFO][Math][9][MAP][END]
[INFO][Math][9][#FAIL-TESTS][1]
[INFO][Math][10][MAP][START]
[INFO][Math][10][MAPPED][public void org.apache.commons.math3.analysis.differentiation.DSCompiler.atan2(double[];int;double[];int;double[];int)]
[INFO][Math][10][MAP][END]
[INFO][Math][10][#FAIL-TESTS][1]
[INFO][Math][11][MAP][START]
[INFO][Math][11][MAPPED][public double org.apache.commons.math3.distribution.MultivariateNormalDistribution.density(double[]) throws org.apache.commons.math3.exception.DimensionMismatchException]
[INFO][Math][11][MAP][END]
[INFO][Math][11][#FAIL-TESTS][1]
[INFO][Math][12][MAP][START]
[INFO][Math][12][MAPPED][FAIL] Empty file!
[INFO][Math][12][MAP][END]
[INFO][Math][13][MAP][START]
[INFO][Math][13][MAPPED][private org.apache.commons.math3.linear.RealMatrix org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.squareRoot(org.apache.commons.math3.linear.RealMatrix)]
[INFO][Math][13][MAP][END]
[INFO][Math][13][#FAIL-TESTS][1]
[INFO][Math][14][MAP][START]
[INFO][Math][14][MAPPED][public org.apache.commons.math3.optim.nonlinear.vector.Weight(double[])]
[INFO][Math][14][MAPPED][private org.apache.commons.math3.linear.RealMatrix org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.squareRoot(org.apache.commons.math3.linear.RealMatrix)]
[INFO][Math][14][MAP][END]
[INFO][Math][14][#FAIL-TESTS][1]
[INFO][Math][15][MAP][START]
[INFO][Math][15][MAPPED][public static double org.apache.commons.math3.util.FastMath.pow(double;double)]
[INFO][Math][15][MAP][END]
[INFO][Math][15][#FAIL-TESTS][1]
[INFO][Math][16][MAP][START]
[INFO][Math][16][MAPPED][public static double org.apache.commons.math3.util.FastMath.cosh(double)]
[INFO][Math][16][MAPPED][public static double org.apache.commons.math3.util.FastMath.sinh(double)]
[INFO][Math][16][MAP][END]
[INFO][Math][16][#FAIL-TESTS][2]
[INFO][Math][17][MAP][START]
[INFO][Math][17][MAPPED][public org.apache.commons.math3.dfp.Dfp org.apache.commons.math3.dfp.Dfp.multiply(int)]
[INFO][Math][17][MAP][END]
[INFO][Math][17][#FAIL-TESTS][1]
[INFO][Math][18][MAP][START]
[INFO][Math][18][MAPPED][public double[] org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction.encode(double[])]
[INFO][Math][18][MAPPED][public double[] org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction.decode(double[])]
[INFO][Math][18][MAPPED][FAIL][public boolean org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction.isFeasible(double[])] Not found!
[INFO][Math][18][MAP][END]
[INFO][Math][18][#FAIL-TESTS][1]
[INFO][Math][19][MAP][START]
[INFO][Math][19][MAPPED][private void org.apache.commons.math3.optimization.direct.CMAESOptimizer.checkParameters()]
[INFO][Math][19][MAP][END]
[INFO][Math][19][#FAIL-TESTS][1]
[INFO][Math][20][MAP][START]
[INFO][Math][20][MAPPED][public double[] org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction.repairAndDecode(double[])]
[INFO][Math][20][MAP][END]
[INFO][Math][20][#FAIL-TESTS][1]
[INFO][Math][21][MAP][START]
[INFO][Math][21][MAPPED][public org.apache.commons.math3.linear.RectangularCholeskyDecomposition(org.apache.commons.math3.linear.RealMatrix;double) throws org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException]
[INFO][Math][21][MAP][END]
[INFO][Math][21][#FAIL-TESTS][2]
[INFO][Math][22][MAP][START]
[INFO][Math][22][MAPPED][public boolean org.apache.commons.math3.distribution.UniformRealDistribution.isSupportUpperBoundInclusive()]
[INFO][Math][22][MAPPED][public boolean org.apache.commons.math3.distribution.FDistribution.isSupportLowerBoundInclusive()]
[INFO][Math][22][MAP][END]
[INFO][Math][22][#FAIL-TESTS][2]
[INFO][Math][23][MAP][START]
[INFO][Math][23][MAPPED][protected org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair org.apache.commons.math3.optimization.univariate.BrentOptimizer.doOptimize()]
[INFO][Math][23][MAP][END]
[INFO][Math][23][#FAIL-TESTS][1]
[INFO][Math][24][MAP][START]
[INFO][Math][24][MAPPED][protected org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair org.apache.commons.math3.optimization.univariate.BrentOptimizer.doOptimize()]
[INFO][Math][24][MAP][END]
[INFO][Math][24][#FAIL-TESTS][1]
[INFO][Math][25][MAP][START]
[INFO][Math][25][MAPPED][private void org.apache.commons.math3.optimization.fitting.HarmonicFitter$ParameterGuesser.guessAOmega()]
[INFO][Math][25][MAP][END]
[INFO][Math][25][#FAIL-TESTS][1]
[INFO][Math][26][MAP][START]
[INFO][Math][26][MAPPED][private org.apache.commons.math3.fraction.Fraction(double;double;int;int) throws org.apache.commons.math3.fraction.FractionConversionException]
[INFO][Math][26][MAP][END]
[INFO][Math][26][#FAIL-TESTS][1]
[INFO][Math][27][MAP][START]
[INFO][Math][27][MAPPED][public double org.apache.commons.math3.fraction.Fraction.percentageValue()]
[INFO][Math][27][MAP][END]
[INFO][Math][27][#FAIL-TESTS][1]
[INFO][Math][28][MAP][START]
[INFO][Math][28][MAPPED][private java.lang.Integer org.apache.commons.math3.optimization.linear.SimplexSolver.getPivotRow(org.apache.commons.math3.optimization.linear.SimplexTableau;int)]
[INFO][Math][28][MAP][END]
[INFO][Math][28][#FAIL-TESTS][1]
[INFO][Math][29][MAP][START]
[INFO][Math][29][MAPPED][public org.apache.commons.math3.linear.OpenMapRealVector org.apache.commons.math3.linear.OpenMapRealVector.ebeDivide(org.apache.commons.math3.linear.RealVector)]
[INFO][Math][29][MAPPED][public org.apache.commons.math3.linear.OpenMapRealVector org.apache.commons.math3.linear.OpenMapRealVector.ebeMultiply(org.apache.commons.math3.linear.RealVector)]
[INFO][Math][29][MAP][END]
[INFO][Math][29][#FAIL-TESTS][3]
[INFO][Math][30][MAP][START]
[INFO][Math][30][MAPPED][private double org.apache.commons.math3.stat.inference.MannWhitneyUTest.calculateAsymptoticPValue(double;int;int) throws org.apache.commons.math3.exception.ConvergenceException;org.apache.commons.math3.exception.MaxCountExceededException]
[INFO][Math][30][MAP][END]
[INFO][Math][30][#FAIL-TESTS][1]
[INFO][Math][31][MAP][START]
[INFO][Math][31][MAPPED][public double org.apache.commons.math3.util.ContinuedFraction.evaluate(double;double;int)]
[INFO][Math][31][MAP][END]
[INFO][Math][31][#FAIL-TESTS][2]
[INFO][Math][32][MAP][START]
[INFO][Math][32][MAPPED][protected void org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.computeGeometricalProperties()]
[INFO][Math][32][MAP][END]
[INFO][Math][32][#FAIL-TESTS][1]
[INFO][Math][33][MAP][START]
[INFO][Math][33][MAPPED][protected void org.apache.commons.math3.optimization.linear.SimplexTableau.dropPhase1Objective()]
[INFO][Math][33][MAP][END]
[INFO][Math][33][#FAIL-TESTS][1]
[INFO][Math][34][MAP][START]
[INFO][Math][34][MAPPED][public java.util.Iterator org.apache.commons.math3.genetics.ListPopulation.iterator()]
[INFO][Math][34][MAP][END]
[INFO][Math][34][#FAIL-TESTS][1]
[INFO][Math][35][MAP][START]
[INFO][Math][35][MAPPED][public org.apache.commons.math3.genetics.ElitisticListPopulation(java.util.List;int;double)]
[INFO][Math][35][MAPPED][public org.apache.commons.math3.genetics.ElitisticListPopulation(int;double)]
[INFO][Math][35][MAP][END]
[INFO][Math][35][#FAIL-TESTS][4]
[INFO][Math][36][MAP][START]
[INFO][Math][36][MAPPED][public double org.apache.commons.math.fraction.BigFraction.doubleValue()]
[INFO][Math][36][MAPPED][public float org.apache.commons.math.fraction.BigFraction.floatValue()]
[INFO][Math][36][MAP][END]
[INFO][Math][36][#FAIL-TESTS][2]
[INFO][Math][37][MAP][START]
[INFO][Math][37][MAPPED][public org.apache.commons.math.complex.Complex org.apache.commons.math.complex.Complex.tan()]
[INFO][Math][37][MAPPED][public org.apache.commons.math.complex.Complex org.apache.commons.math.complex.Complex.tanh()]
[INFO][Math][37][MAP][END]
[INFO][Math][37][#FAIL-TESTS][4]
[INFO][Math][38][MAP][START]
[INFO][Math][38][MAPPED][private void org.apache.commons.math.optimization.direct.BOBYQAOptimizer.prelim(double[];double[])]
[INFO][Math][38][MAP][END]
[INFO][Math][38][#FAIL-TESTS][1]
[INFO][Math][39][MAP][START]
[INFO][Math][39][MAPPED][public void org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(org.apache.commons.math.ode.ExpandableStatefulODE;double) throws org.apache.commons.math.exception.MathIllegalStateException;org.apache.commons.math.exception.MathIllegalArgumentException]
[INFO][Math][39][MAP][END]
[INFO][Math][39][#FAIL-TESTS][1]
[INFO][Math][40][MAP][START]
[INFO][Math][40][MAPPED][protected double org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.doSolve()]
[INFO][Math][40][MAP][END]
[INFO][Math][40][#FAIL-TESTS][1]
[INFO][Math][41][MAP][START]
[INFO][Math][41][MAPPED][public double org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(double[];double[];double;int;int)]
[INFO][Math][41][MAP][END]
[INFO][Math][41][#FAIL-TESTS][1]
[INFO][Math][42][MAP][START]
[INFO][Math][42][MAPPED][protected org.apache.commons.math.optimization.RealPointValuePair org.apache.commons.math.optimization.linear.SimplexTableau.getSolution()]
[INFO][Math][42][MAP][END]
[INFO][Math][42][#FAIL-TESTS][1]
[INFO][Math][43][MAP][START]
[INFO][Math][43][MAPPED][public void org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(double)]
[INFO][Math][43][MAP][END]
[INFO][Math][43][#FAIL-TESTS][6]
[INFO][Math][44][MAP][START]
[INFO][Math][44][MAPPED][protected double org.apache.commons.math.ode.AbstractIntegrator.acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator;double[];double[];double) throws org.apache.commons.math.exception.MathIllegalStateException]
[INFO][Math][44][MAP][END]
[INFO][Math][44][#FAIL-TESTS][1]
[INFO][Math][45][MAP][START]
[INFO][Math][45][MAPPED][public org.apache.commons.math.linear.OpenMapRealMatrix(int;int)]
[INFO][Math][45][MAP][END]
[INFO][Math][45][#FAIL-TESTS][1]
[INFO][Math][46][MAP][START]
[INFO][Math][46][MAPPED][public org.apache.commons.math.complex.Complex org.apache.commons.math.complex.Complex.divide(org.apache.commons.math.complex.Complex)]
[INFO][Math][46][MAPPED][public org.apache.commons.math.complex.Complex org.apache.commons.math.complex.Complex.divide(double)]
[INFO][Math][46][MAP][END]
[INFO][Math][46][#FAIL-TESTS][2]
[INFO][Math][47][MAP][START]
[INFO][Math][47][MAPPED][public org.apache.commons.math.complex.Complex(double;double)]
[INFO][Math][47][MAPPED][public org.apache.commons.math.complex.Complex org.apache.commons.math.complex.Complex.divide(org.apache.commons.math.complex.Complex)]
[INFO][Math][47][MAPPED][public org.apache.commons.math.complex.Complex org.apache.commons.math.complex.Complex.divide(double)]
[INFO][Math][47][MAP][END]
[INFO][Math][47][#FAIL-TESTS][2]
[INFO][Math][48][MAP][START]
[INFO][Math][48][MAPPED][protected final double org.apache.commons.math.analysis.solvers.BaseSecantSolver.doSolve()]
[INFO][Math][48][MAP][END]
[INFO][Math][48][#FAIL-TESTS][1]
[INFO][Math][49][MAP][START]
[INFO][Math][49][MAPPED][public org.apache.commons.math.linear.OpenMapRealVector org.apache.commons.math.linear.OpenMapRealVector.ebeDivide(org.apache.commons.math.linear.RealVector)]
[INFO][Math][49][MAPPED][FAIL][public org.apache.commons.math.linear.OpenMapRealVector org.apache.commons.math.linear.OpenMapRealVector.ebeDivide(double[])] Not found!
[INFO][Math][49][MAPPED][public org.apache.commons.math.linear.OpenMapRealVector org.apache.commons.math.linear.OpenMapRealVector.ebeMultiply(org.apache.commons.math.linear.RealVector)]
[INFO][Math][49][MAPPED][FAIL][public org.apache.commons.math.linear.OpenMapRealVector org.apache.commons.math.linear.OpenMapRealVector.ebeMultiply(double[])] Not found!
[INFO][Math][49][MAP][END]
[INFO][Math][49][#FAIL-TESTS][1]
[INFO][Math][50][MAP][START]
[INFO][Math][50][MAPPED][protected final double org.apache.commons.math.analysis.solvers.BaseSecantSolver.doSolve()]
[INFO][Math][50][MAP][END]
[INFO][Math][50][#FAIL-TESTS][1]
[INFO][Math][51][MAP][START]
[INFO][Math][51][MAPPED][protected final double org.apache.commons.math.analysis.solvers.BaseSecantSolver.doSolve()]
[INFO][Math][51][MAP][END]
[INFO][Math][51][#FAIL-TESTS][1]
[INFO][Math][52][MAP][START]
[INFO][Math][52][MAPPED][public org.apache.commons.math.geometry.euclidean.threed.Rotation(org.apache.commons.math.geometry.euclidean.threed.Vector3D;org.apache.commons.math.geometry.euclidean.threed.Vector3D;org.apache.commons.math.geometry.euclidean.threed.Vector3D;org.apache.commons.math.geometry.euclidean.threed.Vector3D)]
[INFO][Math][52][MAP][END]
[INFO][Math][52][#FAIL-TESTS][1]
[INFO][Math][53][MAP][START]
[INFO][Math][53][MAPPED][public org.apache.commons.math.complex.Complex org.apache.commons.math.complex.Complex.add(org.apache.commons.math.complex.Complex)]
[INFO][Math][53][MAP][END]
[INFO][Math][53][#FAIL-TESTS][1]
[INFO][Math][54][MAP][START]
[INFO][Math][54][MAPPED][protected org.apache.commons.math.dfp.Dfp(org.apache.commons.math.dfp.DfpField;double)]
[INFO][Math][54][MAPPED][public double org.apache.commons.math.dfp.Dfp.toDouble()]
[INFO][Math][54][MAP][END]
[INFO][Math][54][#FAIL-TESTS][1]
[INFO][Math][55][MAP][START]
[INFO][Math][55][MAPPED][public static org.apache.commons.math.geometry.Vector3D org.apache.commons.math.geometry.Vector3D.crossProduct(org.apache.commons.math.geometry.Vector3D;org.apache.commons.math.geometry.Vector3D)]
[INFO][Math][55][MAP][END]
[INFO][Math][55][#FAIL-TESTS][1]
[INFO][Math][56][MAP][START]
[INFO][Math][56][MAPPED][public int[] org.apache.commons.math.util.MultidimensionalCounter.getCounts(int)]
[INFO][Math][56][MAP][END]
[INFO][Math][56][#FAIL-TESTS][1]
[INFO][Math][57][MAP][START]
[INFO][Math][57][MAPPED][private static java.util.List org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer.chooseInitialCenters(java.util.Collection;int;java.util.Random)]
[INFO][Math][57][MAP][END]
[INFO][Math][57][#FAIL-TESTS][1]
[INFO][Math][58][MAP][START]
[INFO][Math][58][MAPPED][public double[] org.apache.commons.math.optimization.fitting.GaussianFitter.fit()]
[INFO][Math][58][MAP][END]
[INFO][Math][58][#FAIL-TESTS][1]
[INFO][Math][59][MAP][START]
[INFO][Math][59][MAPPED][public static float org.apache.commons.math.util.FastMath.max(float;float)]
[INFO][Math][59][MAP][END]
[INFO][Math][59][#FAIL-TESTS][1]
[INFO][Math][60][MAP][START]
[INFO][Math][60][MAPPED][public double org.apache.commons.math.distribution.NormalDistributionImpl.cumulativeProbability(double) throws org.apache.commons.math.MathException]
[INFO][Math][60][MAP][END]
[INFO][Math][60][#FAIL-TESTS][1]
[INFO][Math][61][MAP][START]
[INFO][Math][61][MAPPED][public org.apache.commons.math.distribution.PoissonDistributionImpl(double;double;int)]
[INFO][Math][61][MAP][END]
[INFO][Math][61][#FAIL-TESTS][1]
[INFO][Math][62][MAP][START]
[INFO][Math][62][MAPPED][FAIL][public org.apache.commons.math.optimization.univariate.UnivariateRealPointValuePair org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer.optimize(FUNC,org.apache.commons.math.optimization.GoalType,double,double)] Not found!
[INFO][Math][62][MAPPED][public int org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer.getIterations()]
[INFO][Math][62][MAPPED][public int org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer.getIterations()]
[INFO][Math][62][MAPPED][FAIL][public org.apache.commons.math.optimization.univariate.UnivariateRealPointValuePair org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer.optimize(FUNC,org.apache.commons.math.optimization.GoalType,double,double,double)] Not found!
[INFO][Math][62][MAP][END]
[INFO][Math][62][#FAIL-TESTS][1]
[INFO][Math][63][MAP][START]
[INFO][Math][63][MAPPED][public static boolean org.apache.commons.math.util.MathUtils.equals(double;double)]
[INFO][Math][63][MAP][END]
[INFO][Math][63][#FAIL-TESTS][1]
[INFO][Math][64][MAP][START]
[INFO][Math][64][MAPPED][protected org.apache.commons.math.optimization.VectorialPointValuePair org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer.doOptimize() throws org.apache.commons.math.exception.MathUserException]
[INFO][Math][64][MAP][END]
[INFO][Math][64][#FAIL-TESTS][2]
[INFO][Math][65][MAP][START]
[INFO][Math][65][MAPPED][public double org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer.getRMS()]
[INFO][Math][65][MAPPED][public double org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer.getChiSquare()]
[INFO][Math][65][MAP][END]
[INFO][Math][65][#FAIL-TESTS][1]
[INFO][Math][66][MAP][START]
[INFO][Math][66][MAPPED][public org.apache.commons.math.optimization.univariate.BrentOptimizer()]
[INFO][Math][66][MAPPED][protected org.apache.commons.math.optimization.univariate.UnivariateRealPointValuePair org.apache.commons.math.optimization.univariate.BrentOptimizer.doOptimize() throws org.apache.commons.math.FunctionEvaluationException]
[INFO][Math][66][MAPPED][public double org.apache.commons.math.optimization.univariate.BrentOptimizer.optimize(org.apache.commons.math.analysis.UnivariateRealFunction;org.apache.commons.math.optimization.GoalType;double;double;double) throws org.apache.commons.math.MaxIterationsExceededException;org.apache.commons.math.FunctionEvaluationException]
[INFO][Math][66][MAPPED][public double org.apache.commons.math.optimization.univariate.BrentOptimizer.optimize(org.apache.commons.math.analysis.UnivariateRealFunction;org.apache.commons.math.optimization.GoalType;double;double) throws org.apache.commons.math.MaxIterationsExceededException;org.apache.commons.math.FunctionEvaluationException]
[INFO][Math][66][MAPPED][private double org.apache.commons.math.optimization.univariate.BrentOptimizer.localMin(boolean;org.apache.commons.math.analysis.UnivariateRealFunction;org.apache.commons.math.optimization.GoalType;double;double;double;double;double) throws org.apache.commons.math.MaxIterationsExceededException;org.apache.commons.math.FunctionEvaluationException]
[INFO][Math][66][MAP][END]
[INFO][Math][66][#FAIL-TESTS][4]
[INFO][Math][67][MAP][START]
[INFO][Math][67][MAPPED][FAIL][public double org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer.getFunctionValue()] Not found!
[INFO][Math][67][MAPPED][public double org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer.getResult()]
[INFO][Math][67][MAP][END]
[INFO][Math][67][#FAIL-TESTS][1]
[INFO][Math][68][MAP][START]
[INFO][Math][68][MAPPED][public org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer()]
[INFO][Math][68][MAPPED][protected org.apache.commons.math.optimization.VectorialPointValuePair org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer.doOptimize() throws org.apache.commons.math.exception.MathUserException]
[INFO][Math][68][MAP][END]
[INFO][Math][68][#FAIL-TESTS][2]
[INFO][Math][69][MAP][START]
[INFO][Math][69][MAPPED][public org.apache.commons.math.linear.RealMatrix org.apache.commons.math.stat.correlation.PearsonsCorrelation.getCorrelationPValues() throws org.apache.commons.math.MathException]
[INFO][Math][69][MAP][END]
[INFO][Math][69][#FAIL-TESTS][2]
[INFO][Math][70][MAP][START]
[INFO][Math][70][MAPPED][public double org.apache.commons.math.analysis.solvers.BisectionSolver.solve(org.apache.commons.math.analysis.UnivariateRealFunction;double;double;double) throws org.apache.commons.math.MaxIterationsExceededException;org.apache.commons.math.FunctionEvaluationException]
[INFO][Math][70][MAP][END]
[INFO][Math][70][#FAIL-TESTS][1]
[INFO][Math][71][MAP][START]
[INFO][Math][71][MAPPED][public double org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.integrate(org.apache.commons.math.ode.FirstOrderDifferentialEquations;double;double[];double;double[]) throws org.apache.commons.math.ode.DerivativeException;org.apache.commons.math.ode.IntegratorException]
[INFO][Math][71][MAPPED][public double org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(org.apache.commons.math.ode.FirstOrderDifferentialEquations;double;double[];double;double[]) throws org.apache.commons.math.ode.DerivativeException;org.apache.commons.math.ode.IntegratorException]
[INFO][Math][71][MAP][END]
[INFO][Math][71][#FAIL-TESTS][2]
[INFO][Math][72][MAP][START]
[INFO][Math][72][MAPPED][public double org.apache.commons.math.analysis.solvers.BrentSolver.solve(org.apache.commons.math.analysis.UnivariateRealFunction;double;double;double) throws org.apache.commons.math.MaxIterationsExceededException;org.apache.commons.math.FunctionEvaluationException]
[INFO][Math][72][MAP][END]
[INFO][Math][72][#FAIL-TESTS][1]
[INFO][Math][73][MAP][START]
[INFO][Math][73][MAPPED][public double org.apache.commons.math.analysis.solvers.BrentSolver.solve(org.apache.commons.math.analysis.UnivariateRealFunction;double;double;double) throws org.apache.commons.math.MaxIterationsExceededException;org.apache.commons.math.FunctionEvaluationException]
[INFO][Math][73][MAP][END]
[INFO][Math][73][#FAIL-TESTS][1]
[INFO][Math][74][MAP][START]
[INFO][Math][74][MAPPED][public double org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(org.apache.commons.math.ode.FirstOrderDifferentialEquations;double;double[];double;double[]) throws org.apache.commons.math.ode.DerivativeException;org.apache.commons.math.ode.IntegratorException]
[INFO][Math][74][MAP][END]
[INFO][Math][74][#FAIL-TESTS][1]
[INFO][Math][75][MAP][START]
[INFO][Math][75][MAPPED][public double org.apache.commons.math.stat.Frequency.getPct(java.lang.Object)]
[INFO][Math][75][MAP][END]
[INFO][Math][75][#FAIL-TESTS][1]
[INFO][Math][76][MAP][START]
[INFO][Math][76][MAPPED][public org.apache.commons.math.linear.RealMatrix org.apache.commons.math.linear.SingularValueDecompositionImpl.getU() throws org.apache.commons.math.linear.InvalidMatrixException]
[INFO][Math][76][MAPPED][public org.apache.commons.math.linear.RealMatrix org.apache.commons.math.linear.SingularValueDecompositionImpl.getV() throws org.apache.commons.math.linear.InvalidMatrixException]
[INFO][Math][76][MAP][END]
[INFO][Math][76][#FAIL-TESTS][2]
[INFO][Math][77][MAP][START]
[INFO][Math][77][MAPPED][public double org.apache.commons.math.linear.OpenMapRealVector.getLInfNorm()]
[INFO][Math][77][MAPPED][public double org.apache.commons.math.linear.ArrayRealVector.getLInfNorm()]
[INFO][Math][77][MAP][END]
[INFO][Math][77][#FAIL-TESTS][2]
[INFO][Math][78][MAP][START]
[INFO][Math][78][MAPPED][public boolean org.apache.commons.math.ode.events.EventState.evaluateStep(org.apache.commons.math.ode.sampling.StepInterpolator) throws org.apache.commons.math.ode.DerivativeException;org.apache.commons.math.ode.events.EventException;org.apache.commons.math.ConvergenceException]
[INFO][Math][78][MAP][END]
[INFO][Math][78][#FAIL-TESTS][1]
[INFO][Math][79][MAP][START]
[INFO][Math][79][MAPPED][public static double org.apache.commons.math.util.MathUtils.distance(int[];int[])]
[INFO][Math][79][MAP][END]
[INFO][Math][79][#FAIL-TESTS][1]
[INFO][Math][80][MAP][START]
[INFO][Math][80][MAPPED][private boolean org.apache.commons.math.linear.EigenDecompositionImpl.flipIfWarranted(int;int)]
[INFO][Math][80][MAP][END]
[INFO][Math][80][#FAIL-TESTS][1]
[INFO][Math][81][MAP][START]
[INFO][Math][81][MAPPED][private void org.apache.commons.math.linear.EigenDecompositionImpl.computeGershgorinCircles()]
[INFO][Math][81][MAPPED][private void org.apache.commons.math.linear.EigenDecompositionImpl.processGeneralBlock(int) throws org.apache.commons.math.linear.InvalidMatrixException]
[INFO][Math][81][MAPPED][private void org.apache.commons.math.linear.EigenDecompositionImpl.computeShiftIncrement(int;int;int)]
[INFO][Math][81][MAP][END]
[INFO][Math][81][#FAIL-TESTS][1]
[INFO][Math][82][MAP][START]
[INFO][Math][82][MAPPED][private java.lang.Integer org.apache.commons.math.optimization.linear.SimplexSolver.getPivotRow(int;org.apache.commons.math.optimization.linear.SimplexTableau)]
[INFO][Math][82][MAP][END]
[INFO][Math][82][#FAIL-TESTS][1]
[INFO][Math][83][MAP][START]
[INFO][Math][83][MAPPED][private java.lang.Integer org.apache.commons.math.optimization.linear.SimplexTableau.getBasicRow(int;boolean)]
[INFO][Math][83][MAPPED][protected org.apache.commons.math.optimization.RealPointValuePair org.apache.commons.math.optimization.linear.SimplexTableau.getSolution()]
[INFO][Math][83][MAP][END]
[INFO][Math][83][#FAIL-TESTS][1]
[INFO][Math][84][MAP][START]
[INFO][Math][84][MAPPED][protected void org.apache.commons.math.optimization.direct.MultiDirectional.iterateSimplex(java.util.Comparator) throws org.apache.commons.math.FunctionEvaluationException;org.apache.commons.math.optimization.OptimizationException;java.lang.IllegalArgumentException]
[INFO][Math][84][MAP][END]
[INFO][Math][84][#FAIL-TESTS][2]
[INFO][Math][85][MAP][START]
[INFO][Math][85][MAPPED][public static double[] org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.bracket(org.apache.commons.math.analysis.UnivariateRealFunction;double;double;double;int) throws org.apache.commons.math.ConvergenceException;org.apache.commons.math.FunctionEvaluationException]
[INFO][Math][85][MAP][END]
[INFO][Math][85][#FAIL-TESTS][1]
[INFO][Math][86][MAP][START]
[INFO][Math][86][MAPPED][public org.apache.commons.math.linear.CholeskyDecompositionImpl(org.apache.commons.math.linear.RealMatrix;double;double) throws org.apache.commons.math.linear.NonSquareMatrixException;org.apache.commons.math.linear.NotSymmetricMatrixException;org.apache.commons.math.linear.NotPositiveDefiniteMatrixException]
[INFO][Math][86][MAP][END]
[INFO][Math][86][#FAIL-TESTS][2]
[INFO][Math][87][MAP][START]
[INFO][Math][87][MAPPED][private java.lang.Integer org.apache.commons.math.optimization.linear.SimplexTableau.getBasicRow(int)]
[INFO][Math][87][MAP][END]
[INFO][Math][87][#FAIL-TESTS][1]
[INFO][Math][88][MAP][START]
[INFO][Math][88][MAPPED][protected org.apache.commons.math.optimization.RealPointValuePair org.apache.commons.math.optimization.linear.SimplexTableau.getSolution()]
[INFO][Math][88][MAP][END]
[INFO][Math][88][#FAIL-TESTS][1]
[INFO][Math][89][MAP][START]
[INFO][Math][89][MAPPED][public void org.apache.commons.math.stat.Frequency.addValue(java.lang.Object)]
[INFO][Math][89][MAP][END]
[INFO][Math][89][#FAIL-TESTS][1]
[INFO][Math][90][MAP][START]
[INFO][Math][90][MAPPED][public void org.apache.commons.math.stat.Frequency.addValue(java.lang.Object)]
[INFO][Math][90][MAP][END]
[INFO][Math][90][#FAIL-TESTS][1]
[INFO][Math][91][MAP][START]
[INFO][Math][91][MAPPED][public int org.apache.commons.math.fraction.Fraction.compareTo(org.apache.commons.math.fraction.Fraction)]
[INFO][Math][91][MAP][END]
[INFO][Math][91][#FAIL-TESTS][1]
[INFO][Math][92][MAP][START]
[INFO][Math][92][MAPPED][public static long org.apache.commons.math.util.MathUtils.binomialCoefficient(int;int)]
[INFO][Math][92][MAPPED][public static double org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(int;int)]
[INFO][Math][92][MAPPED][public static double org.apache.commons.math.util.MathUtils.binomialCoefficientLog(int;int)]
[INFO][Math][92][MAP][END]
[INFO][Math][92][#FAIL-TESTS][1]
[INFO][Math][93][MAP][START]
[INFO][Math][93][MAPPED][public static long org.apache.commons.math.util.MathUtils.factorial(int)]
[INFO][Math][93][MAPPED][public static double org.apache.commons.math.util.MathUtils.factorialDouble(int)]
[INFO][Math][93][MAPPED][public static double org.apache.commons.math.util.MathUtils.factorialLog(int)]
[INFO][Math][93][MAP][END]
[INFO][Math][93][#FAIL-TESTS][1]
[INFO][Math][94][MAP][START]
[INFO][Math][94][MAPPED][public static int org.apache.commons.math.util.MathUtils.gcd(int;int)]
[INFO][Math][94][MAP][END]
[INFO][Math][94][#FAIL-TESTS][1]
[INFO][Math][95][MAP][START]
[INFO][Math][95][MAPPED][protected double org.apache.commons.math.distribution.FDistributionImpl.getInitialDomain(double)]
[INFO][Math][95][MAP][END]
[INFO][Math][95][#FAIL-TESTS][1]
[INFO][Math][96][MAP][START]
[INFO][Math][96][MAPPED][public boolean org.apache.commons.math.complex.Complex.equals(java.lang.Object)]
[INFO][Math][96][MAP][END]
[INFO][Math][96][#FAIL-TESTS][1]
[INFO][Math][97][MAP][START]
[INFO][Math][97][MAPPED][public double org.apache.commons.math.analysis.BrentSolver.solve(double;double) throws org.apache.commons.math.ConvergenceException;org.apache.commons.math.FunctionEvaluationException]
[INFO][Math][97][MAP][END]
[INFO][Math][97][#FAIL-TESTS][1]
[INFO][Math][98][MAP][START]
[INFO][Math][98][MAPPED][public java.math.BigDecimal[] org.apache.commons.math.linear.BigMatrixImpl.operate(java.math.BigDecimal[]) throws java.lang.IllegalArgumentException]
[INFO][Math][98][MAPPED][public double[] org.apache.commons.math.linear.RealMatrixImpl.operate(double[]) throws java.lang.IllegalArgumentException]
[INFO][Math][98][MAP][END]
[INFO][Math][98][#FAIL-TESTS][2]
[INFO][Math][99][MAP][START]
[INFO][Math][99][MAPPED][public static int org.apache.commons.math.util.MathUtils.gcd(int;int)]
[INFO][Math][99][MAPPED][public static int org.apache.commons.math.util.MathUtils.lcm(int;int)]
[INFO][Math][99][MAP][END]
[INFO][Math][99][#FAIL-TESTS][2]
[INFO][Math][100][MAP][START]
[INFO][Math][100][MAPPED][public double[][] org.apache.commons.math.estimation.AbstractEstimator.getCovariances(org.apache.commons.math.estimation.EstimationProblem) throws org.apache.commons.math.estimation.EstimationException]
[INFO][Math][100][MAPPED][FAIL][public double[] org.apache.commons.math.estimation.AbstractEstimator.guessParametersErrors(org.apache.commons.math.estimation.EstimationProblem)] Not found!
[INFO][Math][100][MAP][END]
[INFO][Math][100][#FAIL-TESTS][1]
[INFO][Math][101][MAP][START]
[INFO][Math][101][MAPPED][public org.apache.commons.math.complex.Complex org.apache.commons.math.complex.ComplexFormat.parse(java.lang.String;java.text.ParsePosition)]
[INFO][Math][101][MAP][END]
[INFO][Math][101][#FAIL-TESTS][2]
[INFO][Math][102][MAP][START]
[INFO][Math][102][MAPPED][public double org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquare(double[];long[]) throws java.lang.IllegalArgumentException]
[INFO][Math][102][MAP][END]
[INFO][Math][102][#FAIL-TESTS][6]
[INFO][Math][103][MAP][START]
[INFO][Math][103][MAPPED][public double org.apache.commons.math.distribution.NormalDistributionImpl.cumulativeProbability(double) throws org.apache.commons.math.MathException]
[INFO][Math][103][MAP][END]
[INFO][Math][103][#FAIL-TESTS][1]
[INFO][Math][104][MAP][START]
[INFO][Math][104][MAPPED][FAIL] Empty file!
[INFO][Math][104][MAP][END]
[INFO][Math][105][MAP][START]
[INFO][Math][105][MAPPED][public double org.apache.commons.math.stat.regression.SimpleRegression.getSumSquaredErrors()]
[INFO][Math][105][MAP][END]
[INFO][Math][105][#FAIL-TESTS][1]
[INFO][Math][106][MAP][START]
[INFO][Math][106][MAPPED][public org.apache.commons.math.fraction.Fraction org.apache.commons.math.fraction.ProperFractionFormat.parse(java.lang.String;java.text.ParsePosition)]
[INFO][Math][106][MAP][END]
[INFO][Math][106][#FAIL-TESTS][1]
[INFO][END]
